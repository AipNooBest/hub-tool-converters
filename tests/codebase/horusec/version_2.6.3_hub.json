{
    "version": "1.0.1",
    "scans": [
        {
            "scanDetails": {
                "id": "86445d13-58f1-4e3e-b99a-9a4133907605",
                "description": "Import horusec results"
            },
            "source": [
                {
                    "id": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                    "type": "codebase",
                    "name": "hub-tool-converters",
                    "url": "https://github.com/Swordfish-Security/hub-tool-converters.git",
                    "checkoutPath": "/",
                    "branch": "master",
                    "commit": "master",
                    "vcsType": "git",
                    "buildTool": "maven"
                }
            ],
            "tool": {
                "product": "horusec"
            },
            "results": [
                {
                    "rules": [
                        {
                            "type": "sast",
                            "name": "horusec Critical",
                            "id": "horusec Critical",
                            "severity": "Critical",
                            "cwe": null,
                            "description": "Unknown"
                        },
                        {
                            "type": "sast",
                            "name": "horusec High",
                            "id": "horusec High",
                            "severity": "High",
                            "cwe": null,
                            "description": "weak"
                        },
                        {
                            "type": "sast",
                            "name": "horusec Medium",
                            "id": "horusec Medium",
                            "severity": "Medium",
                            "cwe": null,
                            "description": "Sensitive"
                        },
                        {
                            "type": "sast",
                            "name": "horusec Low",
                            "id": "horusec Low",
                            "severity": "Low",
                            "cwe": null,
                            "description": "both"
                        }
                    ],
                    "locations": [
                        {
                            "type": "codebase",
                            "id": "1fd0da033753906a29729c3b71ee9e6f",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "docker/entrypoint.sh",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "8a9c34cc57f6de963b3642f80677b780",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "Dockerfile.django",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "8de0863559b1180de668872817455dae",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "Dockerfile.nginx",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "04c6e90faac2675aa89e2176d2eec7d8",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "README.md",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "61b1194d0489dcc46c160913fac02e9c",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/settings/settings.dist.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "2a20a17372964d3fd9383d4026e285d5",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "docker-compose.override.integration_tests.yml",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "4e5e90c6228fd48698d074241c2ba760",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "docker-compose.yml",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "4b6797599231edf9b7211aed7f7e2ca8",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "docs/content/en/integrations/import.md",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "cde1217d77962133d734ac8c60289cd5",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/api_v2/serializers.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "a933107d5c1a944dae816064fcaea3be",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/static/front/js/index.js",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "7d3c5cd3a245eed5926598d19ff3f505",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/reports/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "1577c48c539dfcd7e3f3b505c9c3fce6",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "tests/dedupe_test.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "163b6656ba80a06e26df2b62ef8f5288",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/unittests/test_rest_framework.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "ccd1aab8084c29138ced7b9a1c7321b8",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/appspider/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "66f335d306aa2affbff78292edb1d8a9",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/immuniweb/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "5cb680d591aa87668d4bd71e0232a15d",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/sslscan/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "0d7fd46316f8a760481959f6e7d5922c",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/sslyze/parser_xml.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "de0d42fe5f463f827b1eb313875d8f10",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/ibm_app/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "22a3a66c75bfa8060968dfa7dab9150a",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/nessus/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "448e71f236d95c86843491990f1b0ae3",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/qualys_webapp/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "288f51c464c8631040e1b6088e67e818",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/management/commands/csv_findings_export.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "aedab6071ac90f9299972dc141064077",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/endpoint/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "6a374dece7175ccbac6c64e86ef55435",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/dependency_check/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "6f064b1e9831c857b9b7bf65234c45db",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/ccvs/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "711cf7dd2915eed3374c8185c9530a24",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/retirejs/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "64b8f0b6787420b9f90cbafaa22dfa09",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/blackduck/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "06467e431664130b895dfe86c0ba6582",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/huskyci/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "f2ae9eb8d9911f5b26fd966695546cca",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/trufflehog3/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "07faf7e5c433779304f00ca755178465",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/ort/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "6e570cd1615066b07e78691a85d99a15",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/trufflehog/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "f756a74bbc8cf187f82bb5b3c3a0e433",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/cobalt/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "79ee1c4232266bb74ffb75345e7198cd",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/twistlock/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "58d7a5b0fded907766518bb1225ce3c1",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/bundler_audit/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "310ef0d0d2b1b746d8b02cd0fac13ace",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/scantist/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "70d2be227da8ced8f6aabda247890d38",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/h1/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "9ee847f7e95ac48679c0a423d9bd9918",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/vcg/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "459ac706cd9c291b50c3267ba97087ba",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/bugcrowd/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "aff67882343ec104a94fbba32b9f3924",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/kiuwan/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "bb448050a7950c382d44436d36c02d6a",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/mend/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "ad2dc76649ee429e49bf150a82981326",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/whitehat_sentinel/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "632992abdcfa6ea702a6715c461b9f3f",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/decorators.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "9b7586d5662239199f70e8dad6bc530c",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/finding/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "0ad5be511a724c96025430388fc9427f",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/forms.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "a2e1a3253c77c7864188d43308dc8464",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/management/commands/migrate_surveys.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "51a0afd2112fe33fd9f6f318207b38f8",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/reports/widgets.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "f6922ec766f82b4432b29c6c70663312",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/survey/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "33d53e706371d32e1177b4c8acc4517b",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/templatetags/display_tags.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "12781f08150195a0a4f9f7f28444c080",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/templatetags/get_banner.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "cc2ec764b39b0021df2e6492bbe79107",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/templatetags/navigation_tags.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "ec562fcd5b5bf9029219b0f25fbf8df3",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/burp_enterprise/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "b8a390396c5dc2ad5b18f4e0dd80e2b0",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/contrast/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "b7c95fa1ddc8dc2f6b458646fdb163bc",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/safety/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "7e25837084d8f9ed1546c889b2fcfe68",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/sonarqube/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "75214d5e4cc7f7e9223dbb11951e3055",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/sonarqube_api/importer.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/unittests/tools/test_contrast_parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "2b5c767cb33a3d88b5496e945f3e4b05",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/unittests/tools/test_jfrog_xray_unified_parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "566df3a5983c6c1822d4a85fccf57cd7",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/unittests/tools/test_tfsec_parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "e4ce50f11debc667d871b3ef3e3885bd",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/wsgi.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "5d77dc6d03297ea9d9b9796f22619c83",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/benchmark/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "8b3bb696887e718d72bd5678152f7efc",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/cred/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "cc35010d828a5899b5a109b47e761311",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/db_migrations/0047_jira_minimum_severity_default.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "0a7971b77af1e3c138881c03984d2a6c",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/db_migrations/0061_jira_webhook_secret.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "6ad121fe2fcdb194895b2ab45ec27c3a",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/finding/helper.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "7fc373ba28390480894efa1603c33b93",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/google_sheet/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "a91f1e2c01b2aa10b47fda29a8496eaa",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/middleware.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "83512e3be7f0e66479b749a348eaac71",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/models.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "12de1899b3c199feb9bcf92ba131875a",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/okta.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "0d3456d4b84bd72b5dcaa4dd8f934562",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/product/views.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "8c4554ac55e17b0fe32d953a35d6b5af",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/tools/gitlab_api_fuzzing/parser.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "91350233e8e3e27e2f24b6c798ee6daf",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/unittests/test_swagger_schema.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "49899b172db080c455ed94a373abce47",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "project/unittests/test_tags.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "3bcefa5e951b4dfd67d556956854fdf8",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "tests/Import_scanner_test.py",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "c20fd8677fc2705e8f09d28babba56aa",
                            "sourceId": "1ca3b998-02b3-4c09-b932-4b800fa81388",
                            "fileName": "tests/base_test_class.py",
                            "language": "Any"
                        }
                    ],
                    "findings": [
                        {
                            "type": "sast",
                            "id": "185efb3c2922bb348b87aaa939a20705",
                            "ruleId": "horusec Critical",
                            "locationId": "1fd0da033753906a29729c3b71ee9e6f",
                            "line": 20,
                            "code": "Leaks\nDD_ADMIN_PASSWORD=\"admin\"\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>LeaksDD_ADMIN_PASSWORD=\"admin\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "1fd0da033753906a29729c3b71ee9e6f",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_ADMIN_PASSWORD=\"admin\"\n",
                                    "line": 20
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "fec14de2c371d16fc69cbdf27d2c6e02",
                            "ruleId": "horusec Critical",
                            "locationId": "8a9c34cc57f6de963b3642f80677b780",
                            "line": 115,
                            "code": "Leaks\nDD_CELERY_BROKER_PASSWORD=\"somesecret\" \\\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>LeaksDD_CELERY_BROKER_PASSWORD=\"somesecret\" \\</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8a9c34cc57f6de963b3642f80677b780",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_CELERY_BROKER_PASSWORD=\"somesecret\" \\\n",
                                    "line": 115
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "8d2c8f2a6cf76a6a2b4fe82359e6f27f",
                            "ruleId": "horusec Critical",
                            "locationId": "8a9c34cc57f6de963b3642f80677b780",
                            "line": 131,
                            "code": "Leaks\nDD_DATABASE_PASSWORD=\"somesecret\" \\\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_PASSWORD=\"somesecret\" \\</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8a9c34cc57f6de963b3642f80677b780",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_PASSWORD=\"somesecret\" \\\n",
                                    "line": 131
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "31b3c6e1a01ba78ba3b613d68e763931",
                            "ruleId": "horusec Critical",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 83,
                            "code": "Leaks\nDD_UWSGI_PASS=\"uwsgi_server\" \\\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>LeaksDD_UWSGI_PASS=\"uwsgi_server\" \\</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_UWSGI_PASS=\"uwsgi_server\" \\\n",
                                    "line": 83
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c642fb2b3f686749885b44439a82e5fc",
                            "ruleId": "horusec Critical",
                            "locationId": "04c6e90faac2675aa89e2176d2eec7d8",
                            "line": 98,
                            "code": "Leaks\n* [Stefan Fleckenstein](https://www.linkedin.com/in/stefan-fleckenstein-6a456a30/)\n",
                            "status": "To Verify",
                            "description": "<p>When use LinkedIn Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.<br /><strong>Code:</strong><br /><code>Leaks* [Stefan Fleckenstein](https://www.linkedin.com/in/stefan-fleckenstein-6a456a30/)</code></p>",
                            "stacks": [
                                {
                                    "locationId": "04c6e90faac2675aa89e2176d2eec7d8",
                                    "sequence": 1,
                                    "code": "Leaks\n* [Stefan Fleckenstein](https://www.linkedin.com/in/stefan-fleckenstein-6a456a30/)\n",
                                    "line": 98
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "31c227dd5709da6556696318000827ff",
                            "ruleId": "horusec Critical",
                            "locationId": "61b1194d0489dcc46c160913fac02e9c",
                            "line": 291,
                            "code": "Leaks\n# Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br />```Leaks</p><h1>Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db</h1><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "61b1194d0489dcc46c160913fac02e9c",
                                    "sequence": 1,
                                    "code": "Leaks\n# Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db\n",
                                    "line": 291
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bb70f89c48494c2bedc85a87850da600",
                            "ruleId": "horusec Critical",
                            "locationId": "2a20a17372964d3fd9383d4026e285d5",
                            "line": 31,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "2a20a17372964d3fd9383d4026e285d5",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 31
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5ac73229670142a2fd72b4f28e677fbf",
                            "ruleId": "horusec Critical",
                            "locationId": "2a20a17372964d3fd9383d4026e285d5",
                            "line": 35,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "2a20a17372964d3fd9383d4026e285d5",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 35
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "84c40d3045fe728c541041ccd45e9d45",
                            "ruleId": "horusec Critical",
                            "locationId": "2a20a17372964d3fd9383d4026e285d5",
                            "line": 38,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "2a20a17372964d3fd9383d4026e285d5",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 38
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2b9f98dc7b5cd124b9c2a0c3174139fc",
                            "ruleId": "horusec Critical",
                            "locationId": "2a20a17372964d3fd9383d4026e285d5",
                            "line": 42,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "2a20a17372964d3fd9383d4026e285d5",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_TEST_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 42
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0d2e81b61bf31ab922fc85124f2fb24a",
                            "ruleId": "horusec Critical",
                            "locationId": "4e5e90c6228fd48698d074241c2ba760",
                            "line": 43,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4e5e90c6228fd48698d074241c2ba760",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 43
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "343b4d5bee082a00ba8e3aedeb91e864",
                            "ruleId": "horusec Critical",
                            "locationId": "4e5e90c6228fd48698d074241c2ba760",
                            "line": 60,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4e5e90c6228fd48698d074241c2ba760",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 60
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d6de7669d2d5444f2b934b7183b5d952",
                            "ruleId": "horusec Critical",
                            "locationId": "4e5e90c6228fd48698d074241c2ba760",
                            "line": 76,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4e5e90c6228fd48698d074241c2ba760",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 76
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f12e7f83c7bad2da7fbca42f613a1da9",
                            "ruleId": "horusec Critical",
                            "locationId": "4e5e90c6228fd48698d074241c2ba760",
                            "line": 92,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4e5e90c6228fd48698d074241c2ba760",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 92
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "355a9b15847144c5bc565b92d34f7bdb",
                            "ruleId": "horusec Critical",
                            "locationId": "4e5e90c6228fd48698d074241c2ba760",
                            "line": 108,
                            "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                            "status": "To Verify",
                            "description": "<p>A password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.<br /><strong>Code:</strong><br /><code>LeaksDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4e5e90c6228fd48698d074241c2ba760",
                                    "sequence": 1,
                                    "code": "Leaks\nDD_DATABASE_URL: \"${DD_DATABASE_URL:-mysql://user:pass@mysql:3306/test_data}\"\n",
                                    "line": 108
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "cb354818326ca55ffc76cc98709e240e",
                            "ruleId": "horusec Critical",
                            "locationId": "4b6797599231edf9b7211aed7f7e2ca8",
                            "line": 843,
                            "code": "Leaks\n\"api_key\": \"you-api-key\",\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>Leaks\"api_key\": \"you-api-key\",</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4b6797599231edf9b7211aed7f7e2ca8",
                                    "sequence": 1,
                                    "code": "Leaks\n\"api_key\": \"you-api-key\",\n",
                                    "line": 843
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4b1581ffc85149735e2a34a171deace6",
                            "ruleId": "horusec Critical",
                            "locationId": "61b1194d0489dcc46c160913fac02e9c",
                            "line": 254,
                            "code": "Leaks\nSECRET_KEY = env('DD_SECRET_KEY')\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>LeaksSECRET_KEY = env('DD_SECRET_KEY')</code></p>",
                            "stacks": [
                                {
                                    "locationId": "61b1194d0489dcc46c160913fac02e9c",
                                    "sequence": 1,
                                    "code": "Leaks\nSECRET_KEY = env('DD_SECRET_KEY')\n",
                                    "line": 254
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2374da459757b17a263357d9b9bd7fbc",
                            "ruleId": "horusec Critical",
                            "locationId": "cde1217d77962133d734ac8c60289cd5",
                            "line": 602,
                            "code": "Leaks\n'api_key': {'write_only': True},\n",
                            "status": "To Verify",
                            "description": "<p>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.<br /><strong>Code:</strong><br /><code>Leaks'api_key': {'write_only': True},</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cde1217d77962133d734ac8c60289cd5",
                                    "sequence": 1,
                                    "code": "Leaks\n'api_key': {'write_only': True},\n",
                                    "line": 602
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f226c6a92bc755781933bf76c6dc4dee",
                            "ruleId": "horusec High",
                            "locationId": "a933107d5c1a944dae816064fcaea3be",
                            "line": 335,
                            "code": "JavaScript\nvar r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n",
                            "status": "To Verify",
                            "description": "<p>When software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.<br /><strong>Code:</strong><br /><code>JavaScriptvar r = Math.random()*16|0, v = c == 'x' ? r : (r&amp;0x3|0x8);</code></p>",
                            "stacks": [
                                {
                                    "locationId": "a933107d5c1a944dae816064fcaea3be",
                                    "sequence": 1,
                                    "code": "JavaScript\nvar r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n",
                                    "line": 335
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e9167c5d5c792e4df49732d59530c000",
                            "ruleId": "horusec High",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Generic\nroot user\n",
                            "status": "To Verify",
                            "description": "<p>Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile. - Last USER command in Dockerfile should not be 'root' - Add 'USER <non root user name>' line to the Dockerfile - [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ https://avd.aquasec.com/appshield/ds002]<br /><strong>Code:</strong><br /><code>Genericroot user</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Generic\nroot user\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "efbd72636252ced8a760accf8513e479",
                            "ruleId": "horusec High",
                            "locationId": "7d3c5cd3a245eed5926598d19ff3f505",
                            "line": 987,
                            "code": "Python\n        workbook.save(tmp.name)\n",
                            "status": "To Verify",
                            "description": "<p>Using 'tmp.name' without '.flush()' or '.close()' may cause an error because the file may not exist when 'tmp.name' is used. Use '.flush()' or close the file before using 'tmp.name'.<br /><strong>Code:</strong><br /><code>Python        workbook.save(tmp.name)</code></p>",
                            "stacks": [
                                {
                                    "locationId": "7d3c5cd3a245eed5926598d19ff3f505",
                                    "sequence": 1,
                                    "code": "Python\n        workbook.save(tmp.name)\n",
                                    "line": 987
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "38173975a5a060f57dbb98e38c1d7246",
                            "ruleId": "horusec High",
                            "locationId": "1577c48c539dfcd7e3f3b505c9c3fce6",
                            "line": 41,
                            "code": "Python\n                if '(DUPE)' and 'Duplicate' in concatRow:\n                    dupe_count += 1\n",
                            "status": "To Verify",
                            "description": "<p>Using strings as booleans in Python has unexpected results. <code>\"one\" and \"two\"</code> will return \"two\". <code>\"one\" or \"two\"</code> will return \"one\". In Python, strings are truthy, and strings with a non-zero length evaluate to True.<br /><strong>Code:</strong><br /><code>Python                if '(DUPE)' and 'Duplicate' in concatRow:                    dupe_count += 1</code></p>",
                            "stacks": [
                                {
                                    "locationId": "1577c48c539dfcd7e3f3b505c9c3fce6",
                                    "sequence": 1,
                                    "code": "Python\n                if '(DUPE)' and 'Duplicate' in concatRow:\n                    dupe_count += 1\n",
                                    "line": 41
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f13d0f09334a7fd275d9d22a8857a272",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 183,
                            "code": "Python\n        elif schema_type is TYPE_BOOLEAN:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python        elif schema_type is TYPE_BOOLEAN:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n        elif schema_type is TYPE_BOOLEAN:\n",
                                    "line": 183
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bf4eebc207d1419f4211dad494017870",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 185,
                            "code": "Python\n        elif schema_type is TYPE_INTEGER:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python        elif schema_type is TYPE_INTEGER:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n        elif schema_type is TYPE_INTEGER:\n",
                                    "line": 185
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "982e37338bf7350ad5d94490e1f7a8f2",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 187,
                            "code": "Python\n        elif schema_type is TYPE_NUMBER:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python        elif schema_type is TYPE_NUMBER:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n        elif schema_type is TYPE_NUMBER:\n",
                                    "line": 187
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "234c0520e665a8489d6cc275a0e33d62",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 189,
                            "code": "Python\n        elif schema_type is TYPE_ARRAY:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python        elif schema_type is TYPE_ARRAY:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n        elif schema_type is TYPE_ARRAY:\n",
                                    "line": 189
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "63cb6ec8317e00fbdb147992a77a6ae6",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 191,
                            "code": "Python\n        elif schema_type is TYPE_OBJECT:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python        elif schema_type is TYPE_OBJECT:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n        elif schema_type is TYPE_OBJECT:\n",
                                    "line": 191
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ae9d736c5bf1877352a9e7ce10eb840f",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 193,
                            "code": "Python\n        elif schema_type is TYPE_STRING:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python        elif schema_type is TYPE_STRING:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n        elif schema_type is TYPE_STRING:\n",
                                    "line": 193
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6fc7cba65cfa2d98a3be4fa94674cb0e",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 209,
                            "code": "Python\n            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY and isinstance(obj, set):\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY and isinstance(obj, set):</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY and isinstance(obj, set):\n",
                                    "line": 209
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7f7a634cc3b868a9d6eeecab8ef4f25e",
                            "ruleId": "horusec High",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 244,
                            "code": "Python\n            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY:\n",
                            "status": "To Verify",
                            "description": "<p>Found string comparison using 'is' operator. The 'is' operator is for reference equality, not value equality, and therefore should not be used to compare strings. For more information, see https://github.com/satwikkansal/wtfpython#-how-not-to-use-is-operator\"<br /><strong>Code:</strong><br /><code>Python            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY:</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n            if 'type' in schema and schema[\"type\"] is TYPE_ARRAY:\n",
                                    "line": 244
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c4d2ba281eb394d31288b0f801cedbed",
                            "ruleId": "horusec High",
                            "locationId": "ccd1aab8084c29138ced7b9a1c7321b8",
                            "line": 1,
                            "code": "Python\nfrom xml.dom import NamespaceErr\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonfrom xml.dom import NamespaceErr</code></p>",
                            "stacks": [
                                {
                                    "locationId": "ccd1aab8084c29138ced7b9a1c7321b8",
                                    "sequence": 1,
                                    "code": "Python\nfrom xml.dom import NamespaceErr\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4591a526446c10486a40d171ece4d3a0",
                            "ruleId": "horusec High",
                            "locationId": "66f335d306aa2affbff78292edb1d8a9",
                            "line": 2,
                            "code": "Python\nfrom xml.dom import NamespaceErr\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonfrom xml.dom import NamespaceErr</code></p>",
                            "stacks": [
                                {
                                    "locationId": "66f335d306aa2affbff78292edb1d8a9",
                                    "sequence": 1,
                                    "code": "Python\nfrom xml.dom import NamespaceErr\n",
                                    "line": 2
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "a2672b341484334a8709e5f9b872e692",
                            "ruleId": "horusec High",
                            "locationId": "5cb680d591aa87668d4bd71e0232a15d",
                            "line": 2,
                            "code": "Python\nfrom xml.dom import NamespaceErr\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonfrom xml.dom import NamespaceErr</code></p>",
                            "stacks": [
                                {
                                    "locationId": "5cb680d591aa87668d4bd71e0232a15d",
                                    "sequence": 1,
                                    "code": "Python\nfrom xml.dom import NamespaceErr\n",
                                    "line": 2
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c14792be250dfdb88121a67e982e787a",
                            "ruleId": "horusec High",
                            "locationId": "0d7fd46316f8a760481959f6e7d5922c",
                            "line": 2,
                            "code": "Python\nfrom xml.dom import NamespaceErr\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonfrom xml.dom import NamespaceErr</code></p>",
                            "stacks": [
                                {
                                    "locationId": "0d7fd46316f8a760481959f6e7d5922c",
                                    "sequence": 1,
                                    "code": "Python\nfrom xml.dom import NamespaceErr\n",
                                    "line": 2
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6fc3c74656749744612dd6079132e811",
                            "ruleId": "horusec High",
                            "locationId": "de0d42fe5f463f827b1eb313875d8f10",
                            "line": 3,
                            "code": "Python\nfrom xml.dom import NamespaceErr\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonfrom xml.dom import NamespaceErr</code></p>",
                            "stacks": [
                                {
                                    "locationId": "de0d42fe5f463f827b1eb313875d8f10",
                                    "sequence": 1,
                                    "code": "Python\nfrom xml.dom import NamespaceErr\n",
                                    "line": 3
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b1735d54ff5f646e1f4140ca2cfe9ce4",
                            "ruleId": "horusec High",
                            "locationId": "22a3a66c75bfa8060968dfa7dab9150a",
                            "line": 6,
                            "code": "Python\nfrom xml.dom import NamespaceErr\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonfrom xml.dom import NamespaceErr</code></p>",
                            "stacks": [
                                {
                                    "locationId": "22a3a66c75bfa8060968dfa7dab9150a",
                                    "sequence": 1,
                                    "code": "Python\nfrom xml.dom import NamespaceErr\n",
                                    "line": 6
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "da8e7cf82791a07ee3a3e73aae9972c7",
                            "ruleId": "horusec High",
                            "locationId": "448e71f236d95c86843491990f1b0ae3",
                            "line": 7,
                            "code": "Python\nimport xml.etree.ElementTree\n",
                            "status": "To Verify",
                            "description": "<p>Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE) attacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'. See https://github.com/tiran/defusedxml for more information.<br /><strong>Code:</strong><br /><code>Pythonimport xml.etree.ElementTree</code></p>",
                            "stacks": [
                                {
                                    "locationId": "448e71f236d95c86843491990f1b0ae3",
                                    "sequence": 1,
                                    "code": "Python\nimport xml.etree.ElementTree\n",
                                    "line": 7
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "04162373d3bfee5721336b4a8fe3cd61",
                            "ruleId": "horusec High",
                            "locationId": "288f51c464c8631040e1b6088e67e818",
                            "line": 33,
                            "code": "Python\n        writer = csv.writer(open(file_path, 'w'))\n",
                            "status": "To Verify",
                            "description": "<p>Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.<br /><strong>Code:</strong><br /><code>Python        writer = csv.writer(open(file_path, 'w'))</code></p>",
                            "stacks": [
                                {
                                    "locationId": "288f51c464c8631040e1b6088e67e818",
                                    "sequence": 1,
                                    "code": "Python\n        writer = csv.writer(open(file_path, 'w'))\n",
                                    "line": 33
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2e9afab556d77220fd747ac912c81f9e",
                            "ruleId": "horusec High",
                            "locationId": "7d3c5cd3a245eed5926598d19ff3f505",
                            "line": 858,
                            "code": "Python\n    writer = csv.writer(response)\n",
                            "status": "To Verify",
                            "description": "<p>Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.<br /><strong>Code:</strong><br /><code>Python    writer = csv.writer(response)</code></p>",
                            "stacks": [
                                {
                                    "locationId": "7d3c5cd3a245eed5926598d19ff3f505",
                                    "sequence": 1,
                                    "code": "Python\n    writer = csv.writer(response)\n",
                                    "line": 858
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3ce2258fa295bf5c6dafebc3c183ea8b",
                            "ruleId": "horusec Medium",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Nginx\n\n",
                            "status": "To Verify",
                            "description": "<p>Your Nginx file must include 'server_tokens off;' configuration. There are many different kinds of mistakes that introduce information exposures. The severities of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. For more information checkout the CWE-200 (https://cwe.mitre.org/data/definitions/200.html) advisory.<br /><strong>Code:</strong><br />```Nginx</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Nginx\n\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "45aae7d7e9c020801ba16587251520fb",
                            "ruleId": "horusec Medium",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Nginx\n\n",
                            "status": "To Verify",
                            "description": "<p>Your Nginx file must include the X-Frame-Options header. A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to. For more information checkout the CWE-1021 (https://cwe.mitre.org/data/definitions/1021.html) advisory.<br /><strong>Code:</strong><br />```Nginx</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Nginx\n\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f06b12df5d6a12078366c8e33e60a8e5",
                            "ruleId": "horusec Medium",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Nginx\n\n",
                            "status": "To Verify",
                            "description": "<p>Setting this header will prevent the browser from interpreting files as a different MIME type to what is specified in the Content-Type HTTP header (e.g. treating text/plain as text/css). For more information checkout https://owasp.org/www-project-secure-headers/#x-content-type-options<br /><strong>Code:</strong><br />```Nginx</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Nginx\n\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1857f602bb91747a04fdab6be359e080",
                            "ruleId": "horusec Medium",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Nginx\n\n",
                            "status": "To Verify",
                            "description": "<p>A Content Security Policy (also named CSP) requires careful tuning and precise definition of the policy. If enabled, CSP has significant impact on the way browsers render pages (e.g., inline JavaScript is disabled by default and must be explicitly allowed in the policy). CSP prevents a wide range of attacks, including cross-site scripting and other cross-site injections. For more information checkout https://owasp.org/www-project-secure-headers/#content-security-policy<br /><strong>Code:</strong><br />```Nginx</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Nginx\n\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "da4092482e3feab0a956c75ce74ab3a7",
                            "ruleId": "horusec Medium",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Generic\n':latest' tag used\n",
                            "status": "To Verify",
                            "description": "<p>When using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated. - Specify a tag in the 'FROM' statement for image 'build' - Add a tag to the image in the 'FROM' statement - [https://avd.aquasec.com/appshield/ds001]<br /><strong>Code:</strong><br /><code>Generic':latest' tag used</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Generic\n':latest' tag used\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5f5afbeba7db8d906fb01cc232a4387d",
                            "ruleId": "horusec Medium",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Generic\n'RUN cd ...' to change directory\n",
                            "status": "To Verify",
                            "description": "<p>Use WORKDIR instead of proliferating instructions like 'RUN cd .. &amp;&amp; do-something', which are hard to read, troubleshoot, and maintain. - RUN should not be used to change directory: 'cd components .. yarn'. Use 'WORKDIR' statement instead. - Use WORKDIR to change directory - [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir https://avd.aquasec.com/appshield/ds013]<br /><strong>Code:</strong><br /><code>Generic'RUN cd ...' to change directory</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Generic\n'RUN cd ...' to change directory\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ba984f4b2e64966dc43a4ae4e8e93ce2",
                            "ruleId": "horusec Medium",
                            "locationId": "aedab6071ac90f9299972dc141064077",
                            "line": 78,
                            "code": "Python\n        request, 'project/endpoints.html', {\n            'product_tab': product_tab,\n            \"endpo\n",
                            "status": "To Verify",
                            "description": "<p>key <code>'product_tab'</code> is uselessly assigned twice<br /><strong>Code:</strong><br /><code>Python        request, 'project/endpoints.html', {            'product_tab': product_tab,            \"endpo</code></p>",
                            "stacks": [
                                {
                                    "locationId": "aedab6071ac90f9299972dc141064077",
                                    "sequence": 1,
                                    "code": "Python\n        request, 'project/endpoints.html', {\n            'product_tab': product_tab,\n            \"endpo\n",
                                    "line": 78
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "abdece42b3da7ad38f6ae2ddf002426b",
                            "ruleId": "horusec Medium",
                            "locationId": "6a374dece7175ccbac6c64e86ef55435",
                            "line": 22,
                            "code": "Python\n            key = hashlib.md5(key_str.encode('utf-8')).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            key = hashlib.md5(key_str.encode('utf-8')).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "6a374dece7175ccbac6c64e86ef55435",
                                    "sequence": 1,
                                    "code": "Python\n            key = hashlib.md5(key_str.encode('utf-8')).hexdigest()\n",
                                    "line": 22
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "eeb14f9b37f1bd6c6d4ff3e4c5c9934f",
                            "ruleId": "horusec Medium",
                            "locationId": "6f064b1e9831c857b9b7bf65234c45db",
                            "line": 53,
                            "code": "Python\n                    unique_key = hashlib.md5(\n                        str(vuln).encode('utf-8')).hex\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                    unique_key = hashlib.md5(                        str(vuln).encode('utf-8')).hex</code></p>",
                            "stacks": [
                                {
                                    "locationId": "6f064b1e9831c857b9b7bf65234c45db",
                                    "sequence": 1,
                                    "code": "Python\n                    unique_key = hashlib.md5(\n                        str(vuln).encode('utf-8')).hex\n",
                                    "line": 53
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5f2534291771784fb38f90601d24a8e1",
                            "ruleId": "horusec Medium",
                            "locationId": "711cf7dd2915eed3374c8185c9530a24",
                            "line": 40,
                            "code": "Python\n                        unique_key = hashlib.md5((item.title + item.references + encrypted_file).enc\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                        unique_key = hashlib.md5((item.title + item.references + encrypted_file).enc</code></p>",
                            "stacks": [
                                {
                                    "locationId": "711cf7dd2915eed3374c8185c9530a24",
                                    "sequence": 1,
                                    "code": "Python\n                        unique_key = hashlib.md5((item.title + item.references + encrypted_file).enc\n",
                                    "line": 40
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6cb6bdfaf93a9c5afd34547c5fdfe826",
                            "ruleId": "horusec Medium",
                            "locationId": "64b8f0b6787420b9f90cbafaa22dfa09",
                            "line": 45,
                            "code": "Python\n            dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)\n                .encode(\"u\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)                .encode(\"u</code></p>",
                            "stacks": [
                                {
                                    "locationId": "64b8f0b6787420b9f90cbafaa22dfa09",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)\n                .encode(\"u\n",
                                    "line": 45
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5de7eeecd1def8369a51f58ac0bf364c",
                            "ruleId": "horusec Medium",
                            "locationId": "06467e431664130b895dfe86c0ba6582",
                            "line": 55,
                            "code": "Python\n                        unique_key = hashlib.md5(\n                            str(vuln).encode('utf-\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                        unique_key = hashlib.md5(                            str(vuln).encode('utf-</code></p>",
                            "stacks": [
                                {
                                    "locationId": "06467e431664130b895dfe86c0ba6582",
                                    "sequence": 1,
                                    "code": "Python\n                        unique_key = hashlib.md5(\n                            str(vuln).encode('utf-\n",
                                    "line": 55
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "95073b412c4065f97699aa1bc2044438",
                            "ruleId": "horusec Medium",
                            "locationId": "f2ae9eb8d9911f5b26fd966695546cca",
                            "line": 50,
                            "code": "Python\n            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "f2ae9eb8d9911f5b26fd966695546cca",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n",
                                    "line": 50
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2e504a5cc03a56a615a77c57ea8967f7",
                            "ruleId": "horusec Medium",
                            "locationId": "07faf7e5c433779304f00ca755178465",
                            "line": 55,
                            "code": "Python\n            unique_key = hashlib.md5((item.title + item.references).encode()).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            unique_key = hashlib.md5((item.title + item.references).encode()).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "07faf7e5c433779304f00ca755178465",
                                    "sequence": 1,
                                    "code": "Python\n            unique_key = hashlib.md5((item.title + item.references).encode()).hexdigest()\n",
                                    "line": 55
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "11875d717822587f920d2f0ce5ca8abd",
                            "ruleId": "horusec Medium",
                            "locationId": "6e570cd1615066b07e78691a85d99a15",
                            "line": 54,
                            "code": "Python\n            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "6e570cd1615066b07e78691a85d99a15",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n",
                                    "line": 54
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3df870456981c8658e838f758ba792be",
                            "ruleId": "horusec Medium",
                            "locationId": "66f335d306aa2affbff78292edb1d8a9",
                            "line": 59,
                            "code": "Python\n            dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "66f335d306aa2affbff78292edb1d8a9",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdigest()\n",
                                    "line": 59
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2a73c8ae6ba07a033e7ce70f061de2d8",
                            "ruleId": "horusec Medium",
                            "locationId": "f756a74bbc8cf187f82bb5b3c3a0e433",
                            "line": 56,
                            "code": "Python\n                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi</code></p>",
                            "stacks": [
                                {
                                    "locationId": "f756a74bbc8cf187f82bb5b3c3a0e433",
                                    "sequence": 1,
                                    "code": "Python\n                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi\n",
                                    "line": 56
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f5346f41cc55006f298f58fff7d516ce",
                            "ruleId": "horusec Medium",
                            "locationId": "79ee1c4232266bb74ffb75345e7198cd",
                            "line": 68,
                            "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio</code></p>",
                            "stacks": [
                                {
                                    "locationId": "79ee1c4232266bb74ffb75345e7198cd",
                                    "sequence": 1,
                                    "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                                    "line": 68
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "63a754ba505907737d0fa48388f1a1f8",
                            "ruleId": "horusec Medium",
                            "locationId": "58d7a5b0fded907766518bb1225ce3c1",
                            "line": 61,
                            "code": "Python\n            dupe_key = hashlib.md5(fingerprint.encode(\"utf-8\")).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5(fingerprint.encode(\"utf-8\")).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "58d7a5b0fded907766518bb1225ce3c1",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5(fingerprint.encode(\"utf-8\")).hexdigest()\n",
                                    "line": 61
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "784eb5b30ea60aeeb78b290bdcb8a345",
                            "ruleId": "horusec Medium",
                            "locationId": "310ef0d0d2b1b746d8b02cd0fac13ace",
                            "line": 84,
                            "code": "Python\n                hash_key = hashlib.md5(\n                    node.get('Public ID').encode('utf-8') + \n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                hash_key = hashlib.md5(                    node.get('Public ID').encode('utf-8') +</code></p>",
                            "stacks": [
                                {
                                    "locationId": "310ef0d0d2b1b746d8b02cd0fac13ace",
                                    "sequence": 1,
                                    "code": "Python\n                hash_key = hashlib.md5(\n                    node.get('Public ID').encode('utf-8') + \n",
                                    "line": 84
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "56f981343ff685eaab7740b7ffa0b371",
                            "ruleId": "horusec Medium",
                            "locationId": "de0d42fe5f463f827b1eb313875d8f10",
                            "line": 70,
                            "code": "Python\n                    dupe_key = hashlib.md5(str(issue_description + name + severity).encode('utf-8'))\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                    dupe_key = hashlib.md5(str(issue_description + name + severity).encode('utf-8'))</code></p>",
                            "stacks": [
                                {
                                    "locationId": "de0d42fe5f463f827b1eb313875d8f10",
                                    "sequence": 1,
                                    "code": "Python\n                    dupe_key = hashlib.md5(str(issue_description + name + severity).encode('utf-8'))\n",
                                    "line": 70
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "a8dd96f7331a15badc1c06c08508ddfd",
                            "ruleId": "horusec Medium",
                            "locationId": "70d2be227da8ced8f6aabda247890d38",
                            "line": 77,
                            "code": "Python\n            dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "70d2be227da8ced8f6aabda247890d38",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()\n",
                                    "line": 77
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3c80e3e1413c95dcf399fb1ab8c39ba4",
                            "ruleId": "horusec Medium",
                            "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                            "line": 111,
                            "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio</code></p>",
                            "stacks": [
                                {
                                    "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                                    "sequence": 1,
                                    "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                                    "line": 111
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "93edc3a0194c9738954e1eeef0988a8e",
                            "ruleId": "horusec Medium",
                            "locationId": "459ac706cd9c291b50c3267ba97087ba",
                            "line": 72,
                            "code": "Python\n                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi</code></p>",
                            "stacks": [
                                {
                                    "locationId": "459ac706cd9c291b50c3267ba97087ba",
                                    "sequence": 1,
                                    "code": "Python\n                key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")).hexdi\n",
                                    "line": 72
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4a3997f9f72d74345bc1c06012ef6a35",
                            "ruleId": "horusec Medium",
                            "locationId": "aff67882343ec104a94fbba32b9f3924",
                            "line": 88,
                            "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio</code></p>",
                            "stacks": [
                                {
                                    "locationId": "aff67882343ec104a94fbba32b9f3924",
                                    "sequence": 1,
                                    "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                                    "line": 88
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6bfd0db49cf1ac742c2ef7efaa51c09e",
                            "ruleId": "horusec Medium",
                            "locationId": "bb448050a7950c382d44436d36c02d6a",
                            "line": 104,
                            "code": "Python\n            dupe_key = hashlib.md5(vuln.get('description').encode('utf-8') + vuln.get('title').encod\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5(vuln.get('description').encode('utf-8') + vuln.get('title').encod</code></p>",
                            "stacks": [
                                {
                                    "locationId": "bb448050a7950c382d44436d36c02d6a",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5(vuln.get('description').encode('utf-8') + vuln.get('title').encod\n",
                                    "line": 104
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bac1b8563597f76ca5fc39604804f867",
                            "ruleId": "horusec Medium",
                            "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                            "line": 171,
                            "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio</code></p>",
                            "stacks": [
                                {
                                    "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                                    "sequence": 1,
                                    "code": "Python\n                key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.descriptio\n",
                                    "line": 171
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1976bfb4a7a401374c0ea779951c85eb",
                            "ruleId": "horusec Medium",
                            "locationId": "0d7fd46316f8a760481959f6e7d5922c",
                            "line": 115,
                            "code": "Python\n                    dupe_key = hashlib.md5(str(description + title).encode('utf-8')).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python                    dupe_key = hashlib.md5(str(description + title).encode('utf-8')).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "0d7fd46316f8a760481959f6e7d5922c",
                                    "sequence": 1,
                                    "code": "Python\n                    dupe_key = hashlib.md5(str(description + title).encode('utf-8')).hexdigest()\n",
                                    "line": 115
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e589c634fe3c6f8f2c6f1da5dda07708",
                            "ruleId": "horusec Medium",
                            "locationId": "ad2dc76649ee429e49bf150a82981326",
                            "line": 190,
                            "code": "Python\n            dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()\n",
                            "status": "To Verify",
                            "description": "<p>Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.<br /><strong>Code:</strong><br /><code>Python            dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()</code></p>",
                            "stacks": [
                                {
                                    "locationId": "ad2dc76649ee429e49bf150a82981326",
                                    "sequence": 1,
                                    "code": "Python\n            dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()\n",
                                    "line": 190
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "70a0fb8be443b20b3ba0612e7850ebc9",
                            "ruleId": "horusec Medium",
                            "locationId": "632992abdcfa6ea702a6715c461b9f3f",
                            "line": 155,
                            "code": "Python\n154             print(\"page source:\", self.driver.page_source)\n155             f = open(\"/tmp/seleni\n",
                            "status": "To Verify",
                            "description": "<p>Probable insecure usage of temp file/directory.<br /><strong>Code:</strong><br /><code>Python154             print(\"page source:\", self.driver.page_source)155             f = open(\"/tmp/seleni</code></p>",
                            "stacks": [
                                {
                                    "locationId": "632992abdcfa6ea702a6715c461b9f3f",
                                    "sequence": 1,
                                    "code": "Python\n154             print(\"page source:\", self.driver.page_source)\n155             f = open(\"/tmp/seleni\n",
                                    "line": 155
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e174a2c98bd3f556a6ef6b1c2ee57ed1",
                            "ruleId": "horusec Medium",
                            "locationId": "9b7586d5662239199f70e8dad6bc530c",
                            "line": 1050,
                            "code": "Python\n1049             messages.SUCCESS,\n1050             mark_safe(\n1051                 'Finding templat\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python1049             messages.SUCCESS,1050             mark_safe(1051                 'Finding templat</code></p>",
                            "stacks": [
                                {
                                    "locationId": "9b7586d5662239199f70e8dad6bc530c",
                                    "sequence": 1,
                                    "code": "Python\n1049             messages.SUCCESS,\n1050             mark_safe(\n1051                 'Finding templat\n",
                                    "line": 1050
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "326359c17304ca7567490ee6e207e467",
                            "ruleId": "horusec Medium",
                            "locationId": "9b7586d5662239199f70e8dad6bc530c",
                            "line": 1050,
                            "code": "Python\n1049             messages.SUCCESS,\n1050             mark_safe(\n1051                 'Finding templat\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python1049             messages.SUCCESS,1050             mark_safe(1051                 'Finding templat</code></p>",
                            "stacks": [
                                {
                                    "locationId": "9b7586d5662239199f70e8dad6bc530c",
                                    "sequence": 1,
                                    "code": "Python\n1049             messages.SUCCESS,\n1050             mark_safe(\n1051                 'Finding templat\n",
                                    "line": 1050
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "065be6fe8c3a391014edab3ca485f631",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 65,
                            "code": "Python\n64 \n65         return mark_safe(popup_plus)\n66 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />64 <br />65         return mark_safe(popup_plus)<br />66 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n64 \n65         return mark_safe(popup_plus)\n66 \n\n",
                                    "line": 65
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2d3b16fd02914057203600d14bd278f3",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 65,
                            "code": "Python\n64 \n65         return mark_safe(popup_plus)\n66 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />64 <br />65         return mark_safe(popup_plus)<br />66 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n64 \n65         return mark_safe(popup_plus)\n66 \n\n",
                                    "line": 65
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b3c1165fa5f735429b939af242dae1c8",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 73,
                            "code": "Python\n72 \n73         return mark_safe(popup_plus)\n74 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />72 <br />73         return mark_safe(popup_plus)<br />74 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n72 \n73         return mark_safe(popup_plus)\n74 \n\n",
                                    "line": 73
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "16415b1499adad54c7937065683b71f3",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 73,
                            "code": "Python\n72 \n73         return mark_safe(popup_plus)\n74 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />72 <br />73         return mark_safe(popup_plus)<br />74 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n72 \n73         return mark_safe(popup_plus)\n74 \n\n",
                                    "line": 73
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "74317d6a6dfa844cb9784de7da3ac097",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 81,
                            "code": "Python\n80 \n81         return mark_safe(popup_plus)\n82 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />80 <br />81         return mark_safe(popup_plus)<br />82 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n80 \n81         return mark_safe(popup_plus)\n82 \n\n",
                                    "line": 81
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "929095f4081aafb3bf3a81e19eea5dd1",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 81,
                            "code": "Python\n80 \n81         return mark_safe(popup_plus)\n82 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />80 <br />81         return mark_safe(popup_plus)<br />82 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n80 \n81         return mark_safe(popup_plus)\n82 \n\n",
                                    "line": 81
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "19e97d13ccd3edbf0b4ac66eb1937ff1",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 145,
                            "code": "Python\n144 \n145         return mark_safe('\\n'.join(output))\n146 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />144 <br />145         return mark_safe('\\n'.join(output))<br />146 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n144 \n145         return mark_safe('\\n'.join(output))\n146 \n\n",
                                    "line": 145
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "9beb2c049ece61b272ed47ab74438d05",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 145,
                            "code": "Python\n144 \n145         return mark_safe('\\n'.join(output))\n146 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />144 <br />145         return mark_safe('\\n'.join(output))<br />146 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n144 \n145         return mark_safe('\\n'.join(output))\n146 \n\n",
                                    "line": 145
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7e8f123ad6771826db38285275f65620",
                            "ruleId": "horusec Medium",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 3052,
                            "code": "Python\n3051         if value:\n3052             return pickle.loads(value)\n3053         else:\n\n",
                            "status": "To Verify",
                            "description": "<p>Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.<br /><strong>Code:</strong><br />```Python<br />3051         if value:<br />3052             return pickle.loads(value)<br />3053         else:</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n3051         if value:\n3052             return pickle.loads(value)\n3053         else:\n\n",
                                    "line": 3052
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f282daebabb347cc02ade506b3155628",
                            "ruleId": "horusec Medium",
                            "locationId": "a2e1a3253c77c7864188d43308dc8464",
                            "line": 51,
                            "code": "Python\n50                 # Take all contents from ddse table and insert into data table\n51                \n",
                            "status": "To Verify",
                            "description": "<p>Possible SQL injection vector through string-based query construction.<br /><strong>Code:</strong><br /><code>Python50                 # Take all contents from ddse table and insert into data table51</code></p>",
                            "stacks": [
                                {
                                    "locationId": "a2e1a3253c77c7864188d43308dc8464",
                                    "sequence": 1,
                                    "code": "Python\n50                 # Take all contents from ddse table and insert into data table\n51                \n",
                                    "line": 51
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3009da98df61f663f9b30dbba638cacc",
                            "ruleId": "horusec Medium",
                            "locationId": "a2e1a3253c77c7864188d43308dc8464",
                            "line": 55,
                            "code": "Python\n54                 if new_table_name == 'data_question' or new_table_name == 'data_answer':\n55      \n",
                            "status": "To Verify",
                            "description": "<p>Possible SQL injection vector through string-based query construction.<br /><strong>Code:</strong><br /><code>Python54                 if new_table_name == 'data_question' or new_table_name == 'data_answer':55</code></p>",
                            "stacks": [
                                {
                                    "locationId": "a2e1a3253c77c7864188d43308dc8464",
                                    "sequence": 1,
                                    "code": "Python\n54                 if new_table_name == 'data_question' or new_table_name == 'data_answer':\n55      \n",
                                    "line": 55
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ed116342221508dfdead1cfa49e4bea7",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 139,
                            "code": "Python\n138     def get_html(self):\n139         return mark_safe('<hr title=\"Page Break\" class=\"report-page-\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python138     def get_html(self):139         return mark_safe('&lt;hr title=\"Page Break\" class=\"report-page-</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n138     def get_html(self):\n139         return mark_safe('<hr title=\"Page Break\" class=\"report-page-\n",
                                    "line": 139
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "66fe7399002d66966b7f34c4490784a1",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 142,
                            "code": "Python\n141     def get_asciidoc(self):\n142         return mark_safe('<br/><<<<br/>')\n143 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />141     def get_asciidoc(self):<br />142         return mark_safe('<br/>&lt;&lt;&lt;<br/>')<br />143 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n141     def get_asciidoc(self):\n142         return mark_safe('<br/><<<<br/>')\n143 \n\n",
                                    "line": 142
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1ba22aa2fc2bd0e5b521cf5859779d56",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 145,
                            "code": "Python\n144     def get_option_form(self):\n145         return mark_safe(\n146             \"<div data-multiple\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python144     def get_option_form(self):145         return mark_safe(146             \"&lt;div data-multiple</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n144     def get_option_form(self):\n145         return mark_safe(\n146             \"<div data-multiple\n",
                                    "line": 145
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b4d23af1fa938221976768afc87fd6af",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 145,
                            "code": "Python\n144     def get_option_form(self):\n145         return mark_safe(\n146             \"<div data-multiple\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python144     def get_option_form(self):145         return mark_safe(146             \"&lt;div data-multiple</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n144     def get_option_form(self):\n145         return mark_safe(\n146             \"<div data-multiple\n",
                                    "line": 145
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "8a4883fa2ecac6d825a5d808ba55f109",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 160,
                            "code": "Python\n159     def get_asciidoc(self):\n160         return mark_safe('')\n161 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />159     def get_asciidoc(self):<br />160         return mark_safe('')<br />161 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n159     def get_asciidoc(self):\n160         return mark_safe('')\n161 \n\n",
                                    "line": 160
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c9372376fcca49646c71ae2b3b5cbe01",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 163,
                            "code": "Python\n162     def get_html(self):\n163         return mark_safe('')\n164 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />162     def get_html(self):<br />163         return mark_safe('')<br />164 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n162     def get_html(self):\n163         return mark_safe('')\n164 \n\n",
                                    "line": 163
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "8ec77c2261f912d698aa2ef89384c540",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 170,
                            "code": "Python\n169                                                             \"extra_help\": self.extra_help})\n170 \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python169                                                             \"extra_help\": self.extra_help})170</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n169                                                             \"extra_help\": self.extra_help})\n170 \n",
                                    "line": 170
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d92fb1b24fb087d7610bcbdce3866be1",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 170,
                            "code": "Python\n169                                                             \"extra_help\": self.extra_help})\n170 \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python169                                                             \"extra_help\": self.extra_help})170</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n169                                                             \"extra_help\": self.extra_help})\n170 \n",
                                    "line": 170
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "aaa1c1945f91d61b4520254a9aa9a20f",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 195,
                            "code": "Python\n194                                                             'extra_help': self.help_text})\n195  \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python194                                                             'extra_help': self.help_text})195</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n194                                                             'extra_help': self.help_text})\n195  \n",
                                    "line": 195
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "8702d2b931dc1b2637e2d3579a8216a0",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 195,
                            "code": "Python\n194                                                             'extra_help': self.help_text})\n195  \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python194                                                             'extra_help': self.help_text})195</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n194                                                             'extra_help': self.help_text})\n195  \n",
                                    "line": 195
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0644dc44b5dccf776ebe630e70b3aecc",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 218,
                            "code": "Python\n217                                                             'extra_help': self.help_text})\n218  \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python217                                                             'extra_help': self.help_text})218</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n217                                                             'extra_help': self.help_text})\n218  \n",
                                    "line": 218
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "77c1996494f20be09bc596eab9a0dc54",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 218,
                            "code": "Python\n217                                                             'extra_help': self.help_text})\n218  \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python217                                                             'extra_help': self.help_text})218</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n217                                                             'extra_help': self.help_text})\n218  \n",
                                    "line": 218
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bf4e1e07ed241a4e7d89c060bc588560",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 231,
                            "code": "Python\n230                                                                                 \"content\": self.\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python230                                                                                 \"content\": self.</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n230                                                                                 \"content\": self.\n",
                                    "line": 231
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "42038538c42554ba4a09b51219c0a9e2",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 231,
                            "code": "Python\n230                                                                                 \"content\": self.\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python230                                                                                 \"content\": self.</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n230                                                                                 \"content\": self.\n",
                                    "line": 231
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f02e626caf0c059b4f74207801899345",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 236,
                            "code": "Python\n235                                                                                          \"conten\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python235                                                                                          \"conten</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n235                                                                                          \"conten\n",
                                    "line": 236
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f51750e24701b2b263b82a9b8a5de3fc",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 236,
                            "code": "Python\n235                                                                                          \"conten\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python235                                                                                          \"conten</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n235                                                                                          \"conten\n",
                                    "line": 236
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "fd6fea4f18705c42c22ccf163a918bf9",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 242,
                            "code": "Python\n241                                                             \"title\": self.title})\n242         re\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python241                                                             \"title\": self.title})242         re</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n241                                                             \"title\": self.title})\n242         re\n",
                                    "line": 242
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "22ac10177dfc206cfcd981b1ad6ac451",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 242,
                            "code": "Python\n241                                                             \"title\": self.title})\n242         re\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python241                                                             \"title\": self.title})242         re</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n241                                                             \"title\": self.title})\n242         re\n",
                                    "line": 242
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "54ef3586df84fe672ebf27795cd0cdab",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 295,
                            "code": "Python\n294                                      \"user_id\": self.user_id})\n295         return mark_safe(asci\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python294                                      \"user_id\": self.user_id})295         return mark_safe(asci</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n294                                      \"user_id\": self.user_id})\n295         return mark_safe(asci\n",
                                    "line": 295
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b541c099936c407258006b336b3a83d3",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 295,
                            "code": "Python\n294                                      \"user_id\": self.user_id})\n295         return mark_safe(asci\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python294                                      \"user_id\": self.user_id})295         return mark_safe(asci</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n294                                      \"user_id\": self.user_id})\n295         return mark_safe(asci\n",
                                    "line": 295
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1de77753879df4046dabe862c2b2ee3c",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 305,
                            "code": "Python\n304                                  \"user_id\": self.user_id})\n305         return mark_safe(html)\n30\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python304                                  \"user_id\": self.user_id})305         return mark_safe(html)30</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n304                                  \"user_id\": self.user_id})\n305         return mark_safe(html)\n30\n",
                                    "line": 305
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d5694a119ef77e5c3100ea51b5cbda69",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 305,
                            "code": "Python\n304                                  \"user_id\": self.user_id})\n305         return mark_safe(html)\n30\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python304                                  \"user_id\": self.user_id})305         return mark_safe(html)30</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n304                                  \"user_id\": self.user_id})\n305         return mark_safe(html)\n30\n",
                                    "line": 305
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0e278ca7d5e66ba6a218e1ccb1f5cfeb",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 317,
                            "code": "Python\n316                                  })\n317         return mark_safe(html)\n318 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />316                                  })<br />317         return mark_safe(html)<br />318 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n316                                  })\n317         return mark_safe(html)\n318 \n\n",
                                    "line": 317
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "13210ad970ec8161ae4b725d95f8accd",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 317,
                            "code": "Python\n316                                  })\n317         return mark_safe(html)\n318 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />316                                  })<br />317         return mark_safe(html)<br />318 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n316                                  })\n317         return mark_safe(html)\n318 \n\n",
                                    "line": 317
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "01ec9b44de77a8fe92bab0451a3ddad8",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 366,
                            "code": "Python\n365                                  \"user_id\": self.user_id})\n366         return mark_safe(html)\n36\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python365                                  \"user_id\": self.user_id})366         return mark_safe(html)36</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n365                                  \"user_id\": self.user_id})\n366         return mark_safe(html)\n36\n",
                                    "line": 366
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5cd0992d94c3b0be342267810f6c2c33",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 366,
                            "code": "Python\n365                                  \"user_id\": self.user_id})\n366         return mark_safe(html)\n36\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python365                                  \"user_id\": self.user_id})366         return mark_safe(html)36</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n365                                  \"user_id\": self.user_id})\n366         return mark_safe(html)\n36\n",
                                    "line": 366
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bc9eaecda9aa34b4bab35deeffc7f4a0",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 375,
                            "code": "Python\n374                                      \"user_id\": self.user_id})\n375         return mark_safe(asci\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python374                                      \"user_id\": self.user_id})375         return mark_safe(asci</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n374                                      \"user_id\": self.user_id})\n375         return mark_safe(asci\n",
                                    "line": 375
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6e70f6facccc153ef20f0adc695390f3",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 375,
                            "code": "Python\n374                                      \"user_id\": self.user_id})\n375         return mark_safe(asci\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python374                                      \"user_id\": self.user_id})375         return mark_safe(asci</code></p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n374                                      \"user_id\": self.user_id})\n375         return mark_safe(asci\n",
                                    "line": 375
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "990ba0b61f6b5cf359a789795cf5ec9b",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 385,
                            "code": "Python\n384                                  })\n385         return mark_safe(html)\n386 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />384                                  })<br />385         return mark_safe(html)<br />386 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n384                                  })\n385         return mark_safe(html)\n386 \n\n",
                                    "line": 385
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d21eb14bd32661ef445b023fe080a165",
                            "ruleId": "horusec Medium",
                            "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                            "line": 385,
                            "code": "Python\n384                                  })\n385         return mark_safe(html)\n386 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />384                                  })<br />385         return mark_safe(html)<br />386 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "51a0afd2112fe33fd9f6f318207b38f8",
                                    "sequence": 1,
                                    "code": "Python\n384                                  })\n385         return mark_safe(html)\n386 \n\n",
                                    "line": 385
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bebe2add253ed54096dc0c20f0ed3598",
                            "ruleId": "horusec Medium",
                            "locationId": "f6922ec766f82b4432b29c6c70663312",
                            "line": 457,
                            "code": "Python\n456 \n457                     choices_to_process = pickle.loads(choiceQuestionFrom.cleaned_data['answ\n",
                            "status": "To Verify",
                            "description": "<p>Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.<br /><strong>Code:</strong><br /><code>Python456 457                     choices_to_process = pickle.loads(choiceQuestionFrom.cleaned_data['answ</code></p>",
                            "stacks": [
                                {
                                    "locationId": "f6922ec766f82b4432b29c6c70663312",
                                    "sequence": 1,
                                    "code": "Python\n456 \n457                     choices_to_process = pickle.loads(choiceQuestionFrom.cleaned_data['answ\n",
                                    "line": 457
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e7229cdf99acaaf48ccac57040465d2c",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 80,
                            "code": "Python\n79                                                       'markdown.extensions.tables'])\n80         r\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python79                                                       'markdown.extensions.tables'])80         r</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n79                                                       'markdown.extensions.tables'])\n80         r\n",
                                    "line": 80
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "cc7fe1e0fe460c955bce0301a05e4bda",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 80,
                            "code": "Python\n79                                                       'markdown.extensions.tables'])\n80         r\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python79                                                       'markdown.extensions.tables'])80         r</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n79                                                       'markdown.extensions.tables'])\n80         r\n",
                                    "line": 80
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "8e7f887b892d3b05c08092e3d91825ae",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 114,
                            "code": "Python\n113 \n114     return mark_safe(value.replace('\\n', '&nbsp;+<br />'))\n115 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />113 <br />114     return mark_safe(value.replace('\\n', '&nbsp;+<br />'))<br />115 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n113 \n114     return mark_safe(value.replace('\\n', '&nbsp;+<br />'))\n115 \n\n",
                                    "line": 114
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "9f8779a7fee82209a6c6fa7c6b3f99e0",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 114,
                            "code": "Python\n113 \n114     return mark_safe(value.replace('\\n', '&nbsp;+<br />'))\n115 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />113 <br />114     return mark_safe(value.replace('\\n', '&nbsp;+<br />'))<br />115 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n113 \n114     return mark_safe(value.replace('\\n', '&nbsp;+<br />'))\n115 \n\n",
                                    "line": 114
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0644480dfdf06f1b375f968c99b853b5",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 144,
                            "code": "Python\n143     from data import __docs__\n144     return mark_safe(__docs__)\n145 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />143     from data import <strong>docs</strong><br />144     return mark_safe(<strong>docs</strong>)<br />145 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n143     from data import __docs__\n144     return mark_safe(__docs__)\n145 \n\n",
                                    "line": 144
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "884fa06358d9e882f84193383ac01034",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 144,
                            "code": "Python\n143     from data import __docs__\n144     return mark_safe(__docs__)\n145 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />143     from data import <strong>docs</strong><br />144     return mark_safe(<strong>docs</strong>)<br />145 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n143     from data import __docs__\n144     return mark_safe(__docs__)\n145 \n\n",
                                    "line": 144
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "611aff354f303674043ff245054ca865",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 274,
                            "code": "Python\n273 \n274     return mark_safe(title)\n275 \n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />273 <br />274     return mark_safe(title)<br />275 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n273 \n274     return mark_safe(title)\n275 \n\n",
                                    "line": 274
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4ae545deecc10639caac6f771a9eee71",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 274,
                            "code": "Python\n273 \n274     return mark_safe(title)\n275 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />273 <br />274     return mark_safe(title)<br />275 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n273 \n274     return mark_safe(title)\n275 \n\n",
                                    "line": 274
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "78d451c27830777f9ccc3513fe470216",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 358,
                            "code": "Python\n357     else:\n358         return mark_safe(\"<em class=\\\"text-muted\\\">Not Specified</em>\")\n359 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />357     else:<br />358         return mark_safe(\"<em class=\\\"text-muted\\\">Not Specified</em>\")<br />359 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n357     else:\n358         return mark_safe(\"<em class=\\\"text-muted\\\">Not Specified</em>\")\n359 \n\n",
                                    "line": 358
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5d07c64c21012cb654b16a9fa72aa82e",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 476,
                            "code": "Python\n475     if value == Product.VERY_HIGH_CRITICALITY:\n476         return mark_safe(stars(5, 5, 'Very Hi\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python475     if value == Product.VERY_HIGH_CRITICALITY:476         return mark_safe(stars(5, 5, 'Very Hi</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n475     if value == Product.VERY_HIGH_CRITICALITY:\n476         return mark_safe(stars(5, 5, 'Very Hi\n",
                                    "line": 476
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "43c3b9ac476740c0f02a4847409066a9",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 476,
                            "code": "Python\n475     if value == Product.VERY_HIGH_CRITICALITY:\n476         return mark_safe(stars(5, 5, 'Very Hi\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python475     if value == Product.VERY_HIGH_CRITICALITY:476         return mark_safe(stars(5, 5, 'Very Hi</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n475     if value == Product.VERY_HIGH_CRITICALITY:\n476         return mark_safe(stars(5, 5, 'Very Hi\n",
                                    "line": 476
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e66a0f24a2e01ff111d42e6adba42632",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 478,
                            "code": "Python\n477     if value == Product.HIGH_CRITICALITY:\n478         return mark_safe(stars(4, 5, 'High'))\n479 \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python477     if value == Product.HIGH_CRITICALITY:478         return mark_safe(stars(4, 5, 'High'))479</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n477     if value == Product.HIGH_CRITICALITY:\n478         return mark_safe(stars(4, 5, 'High'))\n479 \n",
                                    "line": 478
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3b334964e1a48c464a119ae3cf49eba9",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 478,
                            "code": "Python\n477     if value == Product.HIGH_CRITICALITY:\n478         return mark_safe(stars(4, 5, 'High'))\n479 \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python477     if value == Product.HIGH_CRITICALITY:478         return mark_safe(stars(4, 5, 'High'))479</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n477     if value == Product.HIGH_CRITICALITY:\n478         return mark_safe(stars(4, 5, 'High'))\n479 \n",
                                    "line": 478
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "39617c3c9d8fa86188fb24d9ffc3c1c4",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 480,
                            "code": "Python\n479     if value == Product.MEDIUM_CRITICALITY:\n480         return mark_safe(stars(3, 5, 'Medium'))\n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />479     if value == Product.MEDIUM_CRITICALITY:<br />480         return mark_safe(stars(3, 5, 'Medium'))</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n479     if value == Product.MEDIUM_CRITICALITY:\n480         return mark_safe(stars(3, 5, 'Medium'))\n\n",
                                    "line": 480
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4b6a210225a30cbe755f506c998c57c3",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 480,
                            "code": "Python\n479     if value == Product.MEDIUM_CRITICALITY:\n480         return mark_safe(stars(3, 5, 'Medium'))\n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />479     if value == Product.MEDIUM_CRITICALITY:<br />480         return mark_safe(stars(3, 5, 'Medium'))</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n479     if value == Product.MEDIUM_CRITICALITY:\n480         return mark_safe(stars(3, 5, 'Medium'))\n\n",
                                    "line": 480
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2fedf5cf15a2a5d0a79e906b8dc8a946",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 482,
                            "code": "Python\n481     if value == Product.LOW_CRITICALITY:\n482         return mark_safe(stars(2, 5, 'Low'))\n483   \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python481     if value == Product.LOW_CRITICALITY:482         return mark_safe(stars(2, 5, 'Low'))483</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n481     if value == Product.LOW_CRITICALITY:\n482         return mark_safe(stars(2, 5, 'Low'))\n483   \n",
                                    "line": 482
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "a853ec675c6366c06a2f81b4883cf947",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 482,
                            "code": "Python\n481     if value == Product.LOW_CRITICALITY:\n482         return mark_safe(stars(2, 5, 'Low'))\n483   \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python481     if value == Product.LOW_CRITICALITY:482         return mark_safe(stars(2, 5, 'Low'))483</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n481     if value == Product.LOW_CRITICALITY:\n482         return mark_safe(stars(2, 5, 'Low'))\n483   \n",
                                    "line": 482
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "34f32960c4a32e121c279cefa991afd1",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 484,
                            "code": "Python\n483     if value == Product.VERY_LOW_CRITICALITY:\n484         return mark_safe(stars(1, 5, 'Very Low\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python483     if value == Product.VERY_LOW_CRITICALITY:484         return mark_safe(stars(1, 5, 'Very Low</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n483     if value == Product.VERY_LOW_CRITICALITY:\n484         return mark_safe(stars(1, 5, 'Very Low\n",
                                    "line": 484
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "89d4a6f97907472d883acf2bb174870f",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 484,
                            "code": "Python\n483     if value == Product.VERY_LOW_CRITICALITY:\n484         return mark_safe(stars(1, 5, 'Very Low\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python483     if value == Product.VERY_LOW_CRITICALITY:484         return mark_safe(stars(1, 5, 'Very Low</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n483     if value == Product.VERY_LOW_CRITICALITY:\n484         return mark_safe(stars(1, 5, 'Very Low\n",
                                    "line": 484
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3e325adc17e4a00bcee31fc7d808cfd5",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 486,
                            "code": "Python\n485     if value == Product.NONE_CRITICALITY:\n486         return mark_safe(stars(0, 5, 'None'))\n487 \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python485     if value == Product.NONE_CRITICALITY:486         return mark_safe(stars(0, 5, 'None'))487</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n485     if value == Product.NONE_CRITICALITY:\n486         return mark_safe(stars(0, 5, 'None'))\n487 \n",
                                    "line": 486
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e41014e4f8c756daf55b173c047c433a",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 486,
                            "code": "Python\n485     if value == Product.NONE_CRITICALITY:\n486         return mark_safe(stars(0, 5, 'None'))\n487 \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python485     if value == Product.NONE_CRITICALITY:486         return mark_safe(stars(0, 5, 'None'))487</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n485     if value == Product.NONE_CRITICALITY:\n486         return mark_safe(stars(0, 5, 'None'))\n487 \n",
                                    "line": 486
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "edb3f6f55444a69ed28c31dc199847e0",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 502,
                            "code": "Python\n501     if value == Product.WEB_PLATFORM:\n502         return mark_safe(icon('list-alt', 'Web'))\n503 \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python501     if value == Product.WEB_PLATFORM:502         return mark_safe(icon('list-alt', 'Web'))503</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n501     if value == Product.WEB_PLATFORM:\n502         return mark_safe(icon('list-alt', 'Web'))\n503 \n",
                                    "line": 502
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "db2e6772ed883b17e125f57bb7d8685b",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 502,
                            "code": "Python\n501     if value == Product.WEB_PLATFORM:\n502         return mark_safe(icon('list-alt', 'Web'))\n503 \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python501     if value == Product.WEB_PLATFORM:502         return mark_safe(icon('list-alt', 'Web'))503</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n501     if value == Product.WEB_PLATFORM:\n502         return mark_safe(icon('list-alt', 'Web'))\n503 \n",
                                    "line": 502
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e78cfbf45f667c7ce19408d3c912db35",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 504,
                            "code": "Python\n503     elif value == Product.DESKTOP_PLATFORM:\n504         return mark_safe(icon('desktop', 'Deskto\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python503     elif value == Product.DESKTOP_PLATFORM:504         return mark_safe(icon('desktop', 'Deskto</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n503     elif value == Product.DESKTOP_PLATFORM:\n504         return mark_safe(icon('desktop', 'Deskto\n",
                                    "line": 504
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "dddebb362b759d5b6c71e5fcb9762151",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 504,
                            "code": "Python\n503     elif value == Product.DESKTOP_PLATFORM:\n504         return mark_safe(icon('desktop', 'Deskto\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python503     elif value == Product.DESKTOP_PLATFORM:504         return mark_safe(icon('desktop', 'Deskto</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n503     elif value == Product.DESKTOP_PLATFORM:\n504         return mark_safe(icon('desktop', 'Deskto\n",
                                    "line": 504
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "97c060eb4c8d31c0cd98d25237f53969",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 506,
                            "code": "Python\n505     elif value == Product.MOBILE_PLATFORM:\n506         return mark_safe(icon('mobile', 'Mobile')\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python505     elif value == Product.MOBILE_PLATFORM:506         return mark_safe(icon('mobile', 'Mobile')</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n505     elif value == Product.MOBILE_PLATFORM:\n506         return mark_safe(icon('mobile', 'Mobile')\n",
                                    "line": 506
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "06eec5ec8a8ffac3a55613d72e99df30",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 506,
                            "code": "Python\n505     elif value == Product.MOBILE_PLATFORM:\n506         return mark_safe(icon('mobile', 'Mobile')\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python505     elif value == Product.MOBILE_PLATFORM:506         return mark_safe(icon('mobile', 'Mobile')</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n505     elif value == Product.MOBILE_PLATFORM:\n506         return mark_safe(icon('mobile', 'Mobile')\n",
                                    "line": 506
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0829945d455242439337210a1908af70",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 508,
                            "code": "Python\n507     elif value == Product.WEB_SERVICE_PLATFORM:\n508         return mark_safe(icon('plug', 'Web S\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python507     elif value == Product.WEB_SERVICE_PLATFORM:508         return mark_safe(icon('plug', 'Web S</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n507     elif value == Product.WEB_SERVICE_PLATFORM:\n508         return mark_safe(icon('plug', 'Web S\n",
                                    "line": 508
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d1d1dc40e50111d2b885cfbd0ee4175c",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 508,
                            "code": "Python\n507     elif value == Product.WEB_SERVICE_PLATFORM:\n508         return mark_safe(icon('plug', 'Web S\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python507     elif value == Product.WEB_SERVICE_PLATFORM:508         return mark_safe(icon('plug', 'Web S</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n507     elif value == Product.WEB_SERVICE_PLATFORM:\n508         return mark_safe(icon('plug', 'Web S\n",
                                    "line": 508
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ec48344f9aa4128cb859374c216fbac9",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 510,
                            "code": "Python\n509     elif value == Product.IOT:\n510         return mark_safe(icon('random', 'Internet of Things')\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python509     elif value == Product.IOT:510         return mark_safe(icon('random', 'Internet of Things')</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n509     elif value == Product.IOT:\n510         return mark_safe(icon('random', 'Internet of Things')\n",
                                    "line": 510
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ee51a6a3f2e724763f9afec3e3cf9342",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 510,
                            "code": "Python\n509     elif value == Product.IOT:\n510         return mark_safe(icon('random', 'Internet of Things')\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python509     elif value == Product.IOT:510         return mark_safe(icon('random', 'Internet of Things')</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n509     elif value == Product.IOT:\n510         return mark_safe(icon('random', 'Internet of Things')\n",
                                    "line": 510
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1e4ae1fa62a1f8ae9ee0d4f9d4bf06a4",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 518,
                            "code": "Python\n517     if value == Product.CONSTRUCTION:\n518         return mark_safe(icon('compass', 'Explore'))\n5\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python517     if value == Product.CONSTRUCTION:518         return mark_safe(icon('compass', 'Explore'))5</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n517     if value == Product.CONSTRUCTION:\n518         return mark_safe(icon('compass', 'Explore'))\n5\n",
                                    "line": 518
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0b48af749c367fa1eeed0b5e7946b0ac",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 518,
                            "code": "Python\n517     if value == Product.CONSTRUCTION:\n518         return mark_safe(icon('compass', 'Explore'))\n5\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python517     if value == Product.CONSTRUCTION:518         return mark_safe(icon('compass', 'Explore'))5</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n517     if value == Product.CONSTRUCTION:\n518         return mark_safe(icon('compass', 'Explore'))\n5\n",
                                    "line": 518
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c5dd1fceeb072afe2e62d5919398351c",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 520,
                            "code": "Python\n519     if value == Product.PRODUCTION:\n520         return mark_safe(icon('ship', 'Sustain'))\n521   \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python519     if value == Product.PRODUCTION:520         return mark_safe(icon('ship', 'Sustain'))521</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n519     if value == Product.PRODUCTION:\n520         return mark_safe(icon('ship', 'Sustain'))\n521   \n",
                                    "line": 520
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2e230e7145251eeaef1a090b6874eae2",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 520,
                            "code": "Python\n519     if value == Product.PRODUCTION:\n520         return mark_safe(icon('ship', 'Sustain'))\n521   \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python519     if value == Product.PRODUCTION:520         return mark_safe(icon('ship', 'Sustain'))521</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n519     if value == Product.PRODUCTION:\n520         return mark_safe(icon('ship', 'Sustain'))\n521   \n",
                                    "line": 520
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ac0f313509327728d6f4f0e7b1aca44c",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 522,
                            "code": "Python\n521     if value == Product.RETIREMENT:\n522         return mark_safe(icon('moon-o', 'Retire'))\n523  \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python521     if value == Product.RETIREMENT:522         return mark_safe(icon('moon-o', 'Retire'))523</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n521     if value == Product.RETIREMENT:\n522         return mark_safe(icon('moon-o', 'Retire'))\n523  \n",
                                    "line": 522
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b62d19a0ea13bed8783fc48b5f09ed22",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 522,
                            "code": "Python\n521     if value == Product.RETIREMENT:\n522         return mark_safe(icon('moon-o', 'Retire'))\n523  \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python521     if value == Product.RETIREMENT:522         return mark_safe(icon('moon-o', 'Retire'))523</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n521     if value == Product.RETIREMENT:\n522         return mark_safe(icon('moon-o', 'Retire'))\n523  \n",
                                    "line": 522
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0fa1e17fa0767b8ecc9afc1b1678bfd7",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 530,
                            "code": "Python\n529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:\n530         return mark_safe(icon('book', 'T\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:530         return mark_safe(icon('book', 'T</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:\n530         return mark_safe(icon('book', 'T\n",
                                    "line": 530
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c99d052180b7dcd41753ecf477d5fd6e",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 530,
                            "code": "Python\n529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:\n530         return mark_safe(icon('book', 'T\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:530         return mark_safe(icon('book', 'T</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n529     if value == Product.THIRD_PARTY_LIBRARY_ORIGIN:\n530         return mark_safe(icon('book', 'T\n",
                                    "line": 530
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "072035788ec9ee46354e48c0326c16b5",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 532,
                            "code": "Python\n531     if value == Product.PURCHASED_ORIGIN:\n532         return mark_safe(icon('money', 'Purchased'\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python531     if value == Product.PURCHASED_ORIGIN:532         return mark_safe(icon('money', 'Purchased'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n531     if value == Product.PURCHASED_ORIGIN:\n532         return mark_safe(icon('money', 'Purchased'\n",
                                    "line": 532
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "06fdb08da1b84722f603d3a35330c874",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 532,
                            "code": "Python\n531     if value == Product.PURCHASED_ORIGIN:\n532         return mark_safe(icon('money', 'Purchased'\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python531     if value == Product.PURCHASED_ORIGIN:532         return mark_safe(icon('money', 'Purchased'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n531     if value == Product.PURCHASED_ORIGIN:\n532         return mark_safe(icon('money', 'Purchased'\n",
                                    "line": 532
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "96120e34da50cec9f7489418c31baaed",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 534,
                            "code": "Python\n533     if value == Product.CONTRACTOR_ORIGIN:\n534         return mark_safe(icon('suitcase', 'Contra\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python533     if value == Product.CONTRACTOR_ORIGIN:534         return mark_safe(icon('suitcase', 'Contra</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n533     if value == Product.CONTRACTOR_ORIGIN:\n534         return mark_safe(icon('suitcase', 'Contra\n",
                                    "line": 534
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "537e61032f9a75802d4ad17939f848dd",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 534,
                            "code": "Python\n533     if value == Product.CONTRACTOR_ORIGIN:\n534         return mark_safe(icon('suitcase', 'Contra\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python533     if value == Product.CONTRACTOR_ORIGIN:534         return mark_safe(icon('suitcase', 'Contra</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n533     if value == Product.CONTRACTOR_ORIGIN:\n534         return mark_safe(icon('suitcase', 'Contra\n",
                                    "line": 534
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "524c929ce385d1b65a6c35b792e92299",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 536,
                            "code": "Python\n535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:\n536         return mark_safe(icon('home', '\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:536         return mark_safe(icon('home', '</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:\n536         return mark_safe(icon('home', '\n",
                                    "line": 536
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c767c702723e47d08de6db4a8ecc4def",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 536,
                            "code": "Python\n535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:\n536         return mark_safe(icon('home', '\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:536         return mark_safe(icon('home', '</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n535     if value == Product.INTERNALLY_DEVELOPED_ORIGIN:\n536         return mark_safe(icon('home', '\n",
                                    "line": 536
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "97c61d95a30fe9d70e905ebda1c0f66f",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 538,
                            "code": "Python\n537     if value == Product.OPEN_SOURCE_ORIGIN:\n538         return mark_safe(icon('code', 'Open Sour\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python537     if value == Product.OPEN_SOURCE_ORIGIN:538         return mark_safe(icon('code', 'Open Sour</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n537     if value == Product.OPEN_SOURCE_ORIGIN:\n538         return mark_safe(icon('code', 'Open Sour\n",
                                    "line": 538
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "cd2d0ac4a33597662fdb773805a4a019",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 538,
                            "code": "Python\n537     if value == Product.OPEN_SOURCE_ORIGIN:\n538         return mark_safe(icon('code', 'Open Sour\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python537     if value == Product.OPEN_SOURCE_ORIGIN:538         return mark_safe(icon('code', 'Open Sour</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n537     if value == Product.OPEN_SOURCE_ORIGIN:\n538         return mark_safe(icon('code', 'Open Sour\n",
                                    "line": 538
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e0fbe0ca00e067efe59fa52d6e249304",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 540,
                            "code": "Python\n539     if value == Product.OUTSOURCED_ORIGIN:\n540         return mark_safe(icon('globe', 'Outsource\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python539     if value == Product.OUTSOURCED_ORIGIN:540         return mark_safe(icon('globe', 'Outsource</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n539     if value == Product.OUTSOURCED_ORIGIN:\n540         return mark_safe(icon('globe', 'Outsource\n",
                                    "line": 540
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0d08814c6d5f926d66c1d214d5fc64e1",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 540,
                            "code": "Python\n539     if value == Product.OUTSOURCED_ORIGIN:\n540         return mark_safe(icon('globe', 'Outsource\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python539     if value == Product.OUTSOURCED_ORIGIN:540         return mark_safe(icon('globe', 'Outsource</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n539     if value == Product.OUTSOURCED_ORIGIN:\n540         return mark_safe(icon('globe', 'Outsource\n",
                                    "line": 540
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e0d4396ba17ffaf03902f61524d0f31e",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 548,
                            "code": "Python\n547     if value:\n548         return mark_safe(icon('users', 'External Audience'))\n549     else:\n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />547     if value:<br />548         return mark_safe(icon('users', 'External Audience'))<br />549     else:</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n547     if value:\n548         return mark_safe(icon('users', 'External Audience'))\n549     else:\n\n",
                                    "line": 548
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "9f30125b4471e12d4e2ed32ac96bd5b3",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 548,
                            "code": "Python\n547     if value:\n548         return mark_safe(icon('users', 'External Audience'))\n549     else:\n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />547     if value:<br />548         return mark_safe(icon('users', 'External Audience'))<br />549     else:</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n547     if value:\n548         return mark_safe(icon('users', 'External Audience'))\n549     else:\n\n",
                                    "line": 548
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "01af5ef0b3af125f628aeff6aa5b7b6b",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 556,
                            "code": "Python\n555     if value:\n556         return mark_safe(icon('cloud', 'Internet Accessible'))\n557     else:\n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />555     if value:<br />556         return mark_safe(icon('cloud', 'Internet Accessible'))<br />557     else:</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n555     if value:\n556         return mark_safe(icon('cloud', 'Internet Accessible'))\n557     else:\n\n",
                                    "line": 556
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "02cd4a84efc10887d3e20dabb3e07aef",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 556,
                            "code": "Python\n555     if value:\n556         return mark_safe(icon('cloud', 'Internet Accessible'))\n557     else:\n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />555     if value:<br />556         return mark_safe(icon('cloud', 'Internet Accessible'))<br />557     else:</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n555     if value:\n556         return mark_safe(icon('cloud', 'Internet Accessible'))\n557     else:\n\n",
                                    "line": 556
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b14241167f84efbbb06aa164bd6d5fc7",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 903,
                            "code": "Python\n902 \n903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python902 903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n902 \n903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan\n",
                                    "line": 903
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ba458a278921d764ef073caa89c60d89",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 903,
                            "code": "Python\n902 \n903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python902 903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n902 \n903     return mark_safe(html % (icon, color, icon, inherited_text,  # indicator if jira_instan\n",
                                    "line": 903
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2817d2eeda2f5c63000004d35433c137",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 949,
                            "code": "Python\n948 \n949     return mark_safe(html % (icon, color, icon,\n950                                 esc(tes\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python948 949     return mark_safe(html % (icon, color, icon,950                                 esc(tes</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n948 \n949     return mark_safe(html % (icon, color, icon,\n950                                 esc(tes\n",
                                    "line": 949
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "bf901ccb2149623f4f66f1f36ad37b4a",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 949,
                            "code": "Python\n948 \n949     return mark_safe(html % (icon, color, icon,\n950                                 esc(tes\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python948 949     return mark_safe(html % (icon, color, icon,950                                 esc(tes</code></p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n948 \n949     return mark_safe(html % (icon, color, icon,\n950                                 esc(tes\n",
                                    "line": 949
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "30f22fa41c19a0b094ecdad5f1f7f727",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 988,
                            "code": "Python\n987 \n988     return mark_safe(html % (list_of_status_changes))\n\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br />```Python<br />987 <br />988     return mark_safe(html % (list_of_status_changes))</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n987 \n988     return mark_safe(html % (list_of_status_changes))\n\n",
                                    "line": 988
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1beea6beabb8d78c45ff2b7a69e17955",
                            "ruleId": "horusec Medium",
                            "locationId": "33d53e706371d32e1177b4c8acc4517b",
                            "line": 988,
                            "code": "Python\n987 \n988     return mark_safe(html % (list_of_status_changes))\n\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br />```Python<br />987 <br />988     return mark_safe(html % (list_of_status_changes))</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "33d53e706371d32e1177b4c8acc4517b",
                                    "sequence": 1,
                                    "code": "Python\n987 \n988     return mark_safe(html % (list_of_status_changes))\n\n",
                                    "line": 988
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "991bf66fb9b0d776223e736f1bc53136",
                            "ruleId": "horusec Medium",
                            "locationId": "12781f08150195a0a4f9f7f28444c080",
                            "line": 21,
                            "code": "Python\n20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']\n21       \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']21</code></p>",
                            "stacks": [
                                {
                                    "locationId": "12781f08150195a0a4f9f7f28444c080",
                                    "sequence": 1,
                                    "code": "Python\n20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']\n21       \n",
                                    "line": 21
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c04a374eee46a32a4179933863d39c94",
                            "ruleId": "horusec Medium",
                            "locationId": "12781f08150195a0a4f9f7f28444c080",
                            "line": 21,
                            "code": "Python\n20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']\n21       \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']21</code></p>",
                            "stacks": [
                                {
                                    "locationId": "12781f08150195a0a4f9f7f28444c080",
                                    "sequence": 1,
                                    "code": "Python\n20                 allowed_attributes['a'] = allowed_attributes['a'] + ['style', 'target']\n21       \n",
                                    "line": 21
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "57b4430c00398c064eb0b80402a3c249",
                            "ruleId": "horusec Medium",
                            "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                            "line": 23,
                            "code": "Python\n22                 inputs += \"<input type='hidden' name='\" + escape(parts[0]) + \"' value=''/>\"\n23   \n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python22                 inputs += \"&lt;input type='hidden' name='\" + escape(parts[0]) + \"' value=''/&gt;\"23</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                                    "sequence": 1,
                                    "code": "Python\n22                 inputs += \"<input type='hidden' name='\" + escape(parts[0]) + \"' value=''/>\"\n23   \n",
                                    "line": 23
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2a75c23bf4398dc54b4a428668dcc807",
                            "ruleId": "horusec Medium",
                            "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                            "line": 23,
                            "code": "Python\n22                 inputs += \"<input type='hidden' name='\" + escape(parts[0]) + \"' value=''/>\"\n23   \n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python22                 inputs += \"&lt;input type='hidden' name='\" + escape(parts[0]) + \"' value=''/&gt;\"23</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                                    "sequence": 1,
                                    "code": "Python\n22                 inputs += \"<input type='hidden' name='\" + escape(parts[0]) + \"' value=''/>\"\n23   \n",
                                    "line": 23
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2ef578edcd531fb55fd8599d9b1e4c6c",
                            "ruleId": "horusec Medium",
                            "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                            "line": 65,
                            "code": "Python\n64     link = '<a title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\">' + display + '&nbs\n",
                            "status": "To Verify",
                            "description": "<p>Potential XSS on mark_safe function.<br /><strong>Code:</strong><br /><code>Python64     link = '&lt;a title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\"&gt;' + display + '&amp;nbs</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                                    "sequence": 1,
                                    "code": "Python\n64     link = '<a title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\">' + display + '&nbs\n",
                                    "line": 65
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2fa84d880c035a8f7aed0656fdb2ba5d",
                            "ruleId": "horusec Medium",
                            "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                            "line": 65,
                            "code": "Python\n64     link = '<a title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\">' + display + '&nbs\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python64     link = '&lt;a title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\"&gt;' + display + '&amp;nbs</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                                    "sequence": 1,
                                    "code": "Python\n64     link = '<a title=\"' + title + '\" href=\"?' + escape(urlencode(dict_)) + '\">' + display + '&nbs\n",
                                    "line": 65
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "18d7f6a0193ca5f38207caff5a405658",
                            "ruleId": "horusec Medium",
                            "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                            "line": 122,
                            "code": "Python\n121         pages.insert(0, PaginationNav(page.previous_page_number(),\n122                      safe\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python121         pages.insert(0, PaginationNav(page.previous_page_number(),122                      safe</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                                    "sequence": 1,
                                    "code": "Python\n121         pages.insert(0, PaginationNav(page.previous_page_number(),\n122                      safe\n",
                                    "line": 122
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "8e08c6300232af685b3b04b5fb8405fb",
                            "ruleId": "horusec Medium",
                            "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                            "line": 127,
                            "code": "Python\n126         pages.append(PaginationNav(page.next_page_number(),\n127                      safe('Next'\n",
                            "status": "To Verify",
                            "description": "<p>Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.<br /><strong>Code:</strong><br /><code>Python126         pages.append(PaginationNav(page.next_page_number(),127                      safe('Next'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc2ec764b39b0021df2e6492bbe79107",
                                    "sequence": 1,
                                    "code": "Python\n126         pages.append(PaginationNav(page.next_page_number(),\n127                      safe('Next'\n",
                                    "line": 127
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1d89b125d427ee439e853e7ad2092002",
                            "ruleId": "horusec Medium",
                            "locationId": "64b8f0b6787420b9f90cbafaa22dfa09",
                            "line": 45,
                            "code": "Python\n44 \n45             dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)\n46                 \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python44 45             dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)46</code></p>",
                            "stacks": [
                                {
                                    "locationId": "64b8f0b6787420b9f90cbafaa22dfa09",
                                    "sequence": 1,
                                    "code": "Python\n44 \n45             dupe_key = hashlib.md5(\"{} | {}\".format(title, i.vuln_source)\n46                 \n",
                                    "line": 45
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "664a159bd5baab110a206ad653060a27",
                            "ruleId": "horusec Medium",
                            "locationId": "459ac706cd9c291b50c3267ba97087ba",
                            "line": 72,
                            "code": "Python\n71 \n72                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python71 72                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")</code></p>",
                            "stacks": [
                                {
                                    "locationId": "459ac706cd9c291b50c3267ba97087ba",
                                    "sequence": 1,
                                    "code": "Python\n71 \n72                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")\n",
                                    "line": 72
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c8058679a6269898f04e3b1df25bf6cd",
                            "ruleId": "horusec Medium",
                            "locationId": "58d7a5b0fded907766518bb1225ce3c1",
                            "line": 61,
                            "code": "Python\n60             fingerprint = \"bundler-audit\" + gem_name + gem_version + advisory_cve + sev\n61       \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python60             fingerprint = \"bundler-audit\" + gem_name + gem_version + advisory_cve + sev61</code></p>",
                            "stacks": [
                                {
                                    "locationId": "58d7a5b0fded907766518bb1225ce3c1",
                                    "sequence": 1,
                                    "code": "Python\n60             fingerprint = \"bundler-audit\" + gem_name + gem_version + advisory_cve + sev\n61       \n",
                                    "line": 61
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d2173cf6c6fcf6ccfbc3efa9d92a6ed5",
                            "ruleId": "horusec Medium",
                            "locationId": "ec562fcd5b5bf9029219b0f25fbf8df3",
                            "line": 24,
                            "code": "Python\n23         parser = etree.HTMLParser()\n24         tree = etree.parse(filename, parser)\n25         if\n",
                            "status": "To Verify",
                            "description": "<p>Using lxml.etree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.parse with its defusedxml equivalent function.<br /><strong>Code:</strong><br /><code>Python23         parser = etree.HTMLParser()24         tree = etree.parse(filename, parser)25         if</code></p>",
                            "stacks": [
                                {
                                    "locationId": "ec562fcd5b5bf9029219b0f25fbf8df3",
                                    "sequence": 1,
                                    "code": "Python\n23         parser = etree.HTMLParser()\n24         tree = etree.parse(filename, parser)\n25         if\n",
                                    "line": 24
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2315d6e2383405859587396cb2beb630",
                            "ruleId": "horusec Medium",
                            "locationId": "6f064b1e9831c857b9b7bf65234c45db",
                            "line": 53,
                            "code": "Python\n52                     vuln['image_id'] = tree['vendors'][vendor]['image_id']\n53                    \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python52                     vuln['image_id'] = tree['vendors'][vendor]['image_id']53</code></p>",
                            "stacks": [
                                {
                                    "locationId": "6f064b1e9831c857b9b7bf65234c45db",
                                    "sequence": 1,
                                    "code": "Python\n52                     vuln['image_id'] = tree['vendors'][vendor]['image_id']\n53                    \n",
                                    "line": 53
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c8544569d257abc7c143c337ea22fbf9",
                            "ruleId": "horusec Medium",
                            "locationId": "f756a74bbc8cf187f82bb5b3c3a0e433",
                            "line": 56,
                            "code": "Python\n55 \n56                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python55 56                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")</code></p>",
                            "stacks": [
                                {
                                    "locationId": "f756a74bbc8cf187f82bb5b3c3a0e433",
                                    "sequence": 1,
                                    "code": "Python\n55 \n56                 key = hashlib.md5((finding.title + '|' + finding.description).encode(\"utf-8\")\n",
                                    "line": 56
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c9e4165c48a0ba987d5109f1199591e0",
                            "ruleId": "horusec Medium",
                            "locationId": "b8a390396c5dc2ad5b18f4e0dd80e2b0",
                            "line": 57,
                            "code": "Python\n56                 endpoint = Endpoint(\n57                     host=\"0.0.0.0\",\n58                   \n",
                            "status": "To Verify",
                            "description": "<p>Possible binding to all interfaces.<br /><strong>Code:</strong><br /><code>Python56                 endpoint = Endpoint(57                     host=\"0.0.0.0\",58</code></p>",
                            "stacks": [
                                {
                                    "locationId": "b8a390396c5dc2ad5b18f4e0dd80e2b0",
                                    "sequence": 1,
                                    "code": "Python\n56                 endpoint = Endpoint(\n57                     host=\"0.0.0.0\",\n58                   \n",
                                    "line": 57
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "68cbde0a8c2aace15f55cfe4a79fe57a",
                            "ruleId": "horusec Medium",
                            "locationId": "6a374dece7175ccbac6c64e86ef55435",
                            "line": 22,
                            "code": "Python\n21                                             finding.file_path.lower())\n22             key = hashl\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python21                                             finding.file_path.lower())22             key = hashl</code></p>",
                            "stacks": [
                                {
                                    "locationId": "6a374dece7175ccbac6c64e86ef55435",
                                    "sequence": 1,
                                    "code": "Python\n21                                             finding.file_path.lower())\n22             key = hashl\n",
                                    "line": 22
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "345d5b94b8ec68f2fed53da692bcfff7",
                            "ruleId": "horusec Medium",
                            "locationId": "70d2be227da8ced8f6aabda247890d38",
                            "line": 77,
                            "code": "Python\n76 \n77             dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()\n78   \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python76 77             dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()78</code></p>",
                            "stacks": [
                                {
                                    "locationId": "70d2be227da8ced8f6aabda247890d38",
                                    "sequence": 1,
                                    "code": "Python\n76 \n77             dupe_key = hashlib.md5(str(references + title).encode('utf-8')).hexdigest()\n78   \n",
                                    "line": 77
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f36ccc0288a3e6c555dd0b3bc79c632f",
                            "ruleId": "horusec Medium",
                            "locationId": "06467e431664130b895dfe86c0ba6582",
                            "line": 55,
                            "code": "Python\n54                             continue\n55                         unique_key = hashlib.md5(\n56     \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python54                             continue55                         unique_key = hashlib.md5(56</code></p>",
                            "stacks": [
                                {
                                    "locationId": "06467e431664130b895dfe86c0ba6582",
                                    "sequence": 1,
                                    "code": "Python\n54                             continue\n55                         unique_key = hashlib.md5(\n56     \n",
                                    "line": 55
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3f53647e07cf60b428d9527851ff10a8",
                            "ruleId": "horusec Medium",
                            "locationId": "de0d42fe5f463f827b1eb313875d8f10",
                            "line": 70,
                            "code": "Python\n69                     # Now time to start assigning issues to findings and endpoints\n70            \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python69                     # Now time to start assigning issues to findings and endpoints70</code></p>",
                            "stacks": [
                                {
                                    "locationId": "de0d42fe5f463f827b1eb313875d8f10",
                                    "sequence": 1,
                                    "code": "Python\n69                     # Now time to start assigning issues to findings and endpoints\n70            \n",
                                    "line": 70
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4fc36e749f6637faf86f5550e4e8d03b",
                            "ruleId": "horusec Medium",
                            "locationId": "66f335d306aa2affbff78292edb1d8a9",
                            "line": 59,
                            "code": "Python\n58 \n59             dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdi\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python58 59             dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdi</code></p>",
                            "stacks": [
                                {
                                    "locationId": "66f335d306aa2affbff78292edb1d8a9",
                                    "sequence": 1,
                                    "code": "Python\n58 \n59             dupe_key = hashlib.md5(str(description + title + severity).encode('utf-8')).hexdi\n",
                                    "line": 59
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "907a62d695b53b870cff12cd40d5013f",
                            "ruleId": "horusec Medium",
                            "locationId": "aff67882343ec104a94fbba32b9f3924",
                            "line": 88,
                            "code": "Python\n87 \n88                 key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.des\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python87 88                 key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.des</code></p>",
                            "stacks": [
                                {
                                    "locationId": "aff67882343ec104a94fbba32b9f3924",
                                    "sequence": 1,
                                    "code": "Python\n87 \n88                 key = hashlib.md5((finding.severity + '|' + finding.title + '|' + finding.des\n",
                                    "line": 88
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e615b9cb2f247b8cbf5d865d85a16eea",
                            "ruleId": "horusec Medium",
                            "locationId": "07faf7e5c433779304f00ca755178465",
                            "line": 55,
                            "code": "Python\n54             item = get_item(model, test)\n55             unique_key = hashlib.md5((item.title + it\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python54             item = get_item(model, test)55             unique_key = hashlib.md5((item.title + it</code></p>",
                            "stacks": [
                                {
                                    "locationId": "07faf7e5c433779304f00ca755178465",
                                    "sequence": 1,
                                    "code": "Python\n54             item = get_item(model, test)\n55             unique_key = hashlib.md5((item.title + it\n",
                                    "line": 55
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2ae3180f500e4cec22c9cdb6cb90a834",
                            "ruleId": "horusec Medium",
                            "locationId": "448e71f236d95c86843491990f1b0ae3",
                            "line": 351,
                            "code": "Python\n350     # supposed to be safe against XEE: https://docs.python.org/3/library/xml.html#xml-vulnerabil\n",
                            "status": "To Verify",
                            "description": "<p>Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called<br /><strong>Code:</strong><br /><code>Python350     # supposed to be safe against XEE: https://docs.python.org/3/library/xml.html#xml-vulnerabil</code></p>",
                            "stacks": [
                                {
                                    "locationId": "448e71f236d95c86843491990f1b0ae3",
                                    "sequence": 1,
                                    "code": "Python\n350     # supposed to be safe against XEE: https://docs.python.org/3/library/xml.html#xml-vulnerabil\n",
                                    "line": 351
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5af4b7fc727099915ea0b3308bb4e51e",
                            "ruleId": "horusec Medium",
                            "locationId": "711cf7dd2915eed3374c8185c9530a24",
                            "line": 40,
                            "code": "Python\n39                         encrypted_file = node['file']\n40                         unique_key = has\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python39                         encrypted_file = node['file']40                         unique_key = has</code></p>",
                            "stacks": [
                                {
                                    "locationId": "711cf7dd2915eed3374c8185c9530a24",
                                    "sequence": 1,
                                    "code": "Python\n39                         encrypted_file = node['file']\n40                         unique_key = has\n",
                                    "line": 40
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "12f0eac2450c71198e3d9fa4da77af26",
                            "ruleId": "horusec Medium",
                            "locationId": "b7c95fa1ddc8dc2f6b458646fdb163bc",
                            "line": 27,
                            "code": "Python\n26             try:\n27                 response = urllib.request.urlopen(url)\n28                 ret\n",
                            "status": "To Verify",
                            "description": "<p>Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.<br /><strong>Code:</strong><br /><code>Python26             try:27                 response = urllib.request.urlopen(url)28                 ret</code></p>",
                            "stacks": [
                                {
                                    "locationId": "b7c95fa1ddc8dc2f6b458646fdb163bc",
                                    "sequence": 1,
                                    "code": "Python\n26             try:\n27                 response = urllib.request.urlopen(url)\n28                 ret\n",
                                    "line": 27
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7f706578f61fe786c88a2ca109c80360",
                            "ruleId": "horusec Medium",
                            "locationId": "310ef0d0d2b1b746d8b02cd0fac13ace",
                            "line": 84,
                            "code": "Python\n83             if item:\n84                 hash_key = hashlib.md5(\n85                     node.get('\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python83             if item:84                 hash_key = hashlib.md5(85                     node.get('</code></p>",
                            "stacks": [
                                {
                                    "locationId": "310ef0d0d2b1b746d8b02cd0fac13ace",
                                    "sequence": 1,
                                    "code": "Python\n83             if item:\n84                 hash_key = hashlib.md5(\n85                     node.get('\n",
                                    "line": 84
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e8417e111ea60efd283138aec22c56ec",
                            "ruleId": "horusec Medium",
                            "locationId": "7e25837084d8f9ed1546c889b2fcfe68",
                            "line": 33,
                            "code": "Python\n32         parser = etree.HTMLParser()\n33         tree = etree.parse(filename, parser)\n34         if\n",
                            "status": "To Verify",
                            "description": "<p>Using lxml.etree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.parse with its defusedxml equivalent function.<br /><strong>Code:</strong><br /><code>Python32         parser = etree.HTMLParser()33         tree = etree.parse(filename, parser)34         if</code></p>",
                            "stacks": [
                                {
                                    "locationId": "7e25837084d8f9ed1546c889b2fcfe68",
                                    "sequence": 1,
                                    "code": "Python\n32         parser = etree.HTMLParser()\n33         tree = etree.parse(filename, parser)\n34         if\n",
                                    "line": 33
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5ffcbdbffb736000c54469243a836373",
                            "ruleId": "horusec Medium",
                            "locationId": "75214d5e4cc7f7e9223dbb11951e3055",
                            "line": 272,
                            "code": "Python\n271         parser = etree.HTMLParser()\n272         details = etree.fromstring(vuln_details, parser)\n",
                            "status": "To Verify",
                            "description": "<p>Using lxml.etree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.fromstring with its defusedxml equivalent function.<br /><strong>Code:</strong><br /><code>Python271         parser = etree.HTMLParser()272         details = etree.fromstring(vuln_details, parser)</code></p>",
                            "stacks": [
                                {
                                    "locationId": "75214d5e4cc7f7e9223dbb11951e3055",
                                    "sequence": 1,
                                    "code": "Python\n271         parser = etree.HTMLParser()\n272         details = etree.fromstring(vuln_details, parser)\n",
                                    "line": 272
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "37648e5ede201d112ffa6e6b06d1f226",
                            "ruleId": "horusec Medium",
                            "locationId": "0d7fd46316f8a760481959f6e7d5922c",
                            "line": 115,
                            "code": "Python\n114                 if title and description is not None:\n115                     dupe_key = hashlib\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python114                 if title and description is not None:115                     dupe_key = hashlib</code></p>",
                            "stacks": [
                                {
                                    "locationId": "0d7fd46316f8a760481959f6e7d5922c",
                                    "sequence": 1,
                                    "code": "Python\n114                 if title and description is not None:\n115                     dupe_key = hashlib\n",
                                    "line": 115
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "86ed20f4f60763c2e9ff8999fc629f10",
                            "ruleId": "horusec Medium",
                            "locationId": "6e570cd1615066b07e78691a85d99a15",
                            "line": 54,
                            "code": "Python\n53 \n54             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n55           \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python53 54             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()55</code></p>",
                            "stacks": [
                                {
                                    "locationId": "6e570cd1615066b07e78691a85d99a15",
                                    "sequence": 1,
                                    "code": "Python\n53 \n54             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n55           \n",
                                    "line": 54
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0b535864ae60b845c8c4f375ecd63d8c",
                            "ruleId": "horusec Medium",
                            "locationId": "f2ae9eb8d9911f5b26fd966695546cca",
                            "line": 50,
                            "code": "Python\n49 \n50             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n51           \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python49 50             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()51</code></p>",
                            "stacks": [
                                {
                                    "locationId": "f2ae9eb8d9911f5b26fd966695546cca",
                                    "sequence": 1,
                                    "code": "Python\n49 \n50             dupe_key = hashlib.md5((file + reason).encode(\"utf-8\")).hexdigest()\n51           \n",
                                    "line": 50
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "befd4f599fb050c741ec59dec6fa38de",
                            "ruleId": "horusec Medium",
                            "locationId": "79ee1c4232266bb74ffb75345e7198cd",
                            "line": 68,
                            "code": "Python\n67             if finding is not None:\n68                 key = hashlib.md5((finding.severity + '|' \n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python67             if finding is not None:68                 key = hashlib.md5((finding.severity + '|'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "79ee1c4232266bb74ffb75345e7198cd",
                                    "sequence": 1,
                                    "code": "Python\n67             if finding is not None:\n68                 key = hashlib.md5((finding.severity + '|' \n",
                                    "line": 68
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5d12e24557874ead06b1dddeb45debaf",
                            "ruleId": "horusec Medium",
                            "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                            "line": 111,
                            "code": "Python\n110             if finding is not None:\n111                 key = hashlib.md5((finding.severity + '|\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python110             if finding is not None:111                 key = hashlib.md5((finding.severity + '|</code></p>",
                            "stacks": [
                                {
                                    "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                                    "sequence": 1,
                                    "code": "Python\n110             if finding is not None:\n111                 key = hashlib.md5((finding.severity + '|\n",
                                    "line": 111
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f93973b1809d316ffbf522a44200b74f",
                            "ruleId": "horusec Medium",
                            "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                            "line": 171,
                            "code": "Python\n170             if finding is not None:\n171                 key = hashlib.md5((finding.severity + '|\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python170             if finding is not None:171                 key = hashlib.md5((finding.severity + '|</code></p>",
                            "stacks": [
                                {
                                    "locationId": "9ee847f7e95ac48679c0a423d9bd9918",
                                    "sequence": 1,
                                    "code": "Python\n170             if finding is not None:\n171                 key = hashlib.md5((finding.severity + '|\n",
                                    "line": 171
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c41eb37e2dcb5a5f9cca7a89c8797333",
                            "ruleId": "horusec Medium",
                            "locationId": "ad2dc76649ee429e49bf150a82981326",
                            "line": 190,
                            "code": "Python\n189 \n190             dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()\n191 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br />```Python<br />189 <br />190             dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()<br />191 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "ad2dc76649ee429e49bf150a82981326",
                                    "sequence": 1,
                                    "code": "Python\n189 \n190             dupe_key = hashlib.md5(whitehat_vuln[\"id\"].encode(\"utf-8\")).hexdigest()\n191 \n\n",
                                    "line": 190
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7cff06c4bc8ca15cf635649e2324f092",
                            "ruleId": "horusec Medium",
                            "locationId": "bb448050a7950c382d44436d36c02d6a",
                            "line": 104,
                            "code": "Python\n103         def _dedup_and_create_finding(dupes, vuln):\n104             dupe_key = hashlib.md5(vuln.\n",
                            "status": "To Verify",
                            "description": "<p>Use of insecure MD2, MD4, MD5, or SHA1 hash function.<br /><strong>Code:</strong><br /><code>Python103         def _dedup_and_create_finding(dupes, vuln):104             dupe_key = hashlib.md5(vuln.</code></p>",
                            "stacks": [
                                {
                                    "locationId": "bb448050a7950c382d44436d36c02d6a",
                                    "sequence": 1,
                                    "code": "Python\n103         def _dedup_and_create_finding(dupes, vuln):\n104             dupe_key = hashlib.md5(vuln.\n",
                                    "line": 104
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "61a7c7440b7476dbb3ed8d7a18f74ff8",
                            "ruleId": "horusec Medium",
                            "locationId": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                            "line": 34,
                            "code": "Python\n33             self.assertEqual('http', endpoint.protocol)\n34             self.assertEqual('0.0.0.0'\n",
                            "status": "To Verify",
                            "description": "<p>Possible binding to all interfaces.<br /><strong>Code:</strong><br /><code>Python33             self.assertEqual('http', endpoint.protocol)34             self.assertEqual('0.0.0.0'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                                    "sequence": 1,
                                    "code": "Python\n33             self.assertEqual('http', endpoint.protocol)\n34             self.assertEqual('0.0.0.0'\n",
                                    "line": 34
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6252c01582584307246e7ddacd5e89dc",
                            "ruleId": "horusec Medium",
                            "locationId": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                            "line": 49,
                            "code": "Python\n48             self.assertEqual('http', endpoint.protocol)\n49             self.assertEqual('0.0.0.0'\n",
                            "status": "To Verify",
                            "description": "<p>Possible binding to all interfaces.<br /><strong>Code:</strong><br /><code>Python48             self.assertEqual('http', endpoint.protocol)49             self.assertEqual('0.0.0.0'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                                    "sequence": 1,
                                    "code": "Python\n48             self.assertEqual('http', endpoint.protocol)\n49             self.assertEqual('0.0.0.0'\n",
                                    "line": 49
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "58bdca25c93ed09b701fe5583323511d",
                            "ruleId": "horusec Medium",
                            "locationId": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                            "line": 53,
                            "code": "Python\n52             self.assertEqual('http', endpoint.protocol)\n53             self.assertEqual('0.0.0.0'\n",
                            "status": "To Verify",
                            "description": "<p>Possible binding to all interfaces.<br /><strong>Code:</strong><br /><code>Python52             self.assertEqual('http', endpoint.protocol)53             self.assertEqual('0.0.0.0'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "5ac69b8ab5b3472ce48d4e09303d5a5d",
                                    "sequence": 1,
                                    "code": "Python\n52             self.assertEqual('http', endpoint.protocol)\n53             self.assertEqual('0.0.0.0'\n",
                                    "line": 53
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7fc72640fadf47e2824ac96cf077349c",
                            "ruleId": "horusec Medium",
                            "locationId": "2b5c767cb33a3d88b5496e945f3e4b05",
                            "line": 206,
                            "code": "Python\n205         self.assertEquals(\"XRAY-86054 - Docker before 1.5 allows\", item.title[:37])\n206         \n",
                            "status": "To Verify",
                            "description": "<p>Probable insecure usage of temp file/directory.<br /><strong>Code:</strong><br /><code>Python205         self.assertEquals(\"XRAY-86054 - Docker before 1.5 allows\", item.title[:37])206</code></p>",
                            "stacks": [
                                {
                                    "locationId": "2b5c767cb33a3d88b5496e945f3e4b05",
                                    "sequence": 1,
                                    "code": "Python\n205         self.assertEquals(\"XRAY-86054 - Docker before 1.5 allows\", item.title[:37])\n206         \n",
                                    "line": 206
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "18b9ee2aca8f7d459ee371d2d3ad7478",
                            "ruleId": "horusec Medium",
                            "locationId": "2b5c767cb33a3d88b5496e945f3e4b05",
                            "line": 209,
                            "code": "Python\n208         self.assertEquals(\"Docker before 1.5 allows\", item.description[:24])\n209         self.as\n",
                            "status": "To Verify",
                            "description": "<p>Probable insecure usage of temp file/directory.<br /><strong>Code:</strong><br /><code>Python208         self.assertEquals(\"Docker before 1.5 allows\", item.description[:24])209         self.as</code></p>",
                            "stacks": [
                                {
                                    "locationId": "2b5c767cb33a3d88b5496e945f3e4b05",
                                    "sequence": 1,
                                    "code": "Python\n208         self.assertEquals(\"Docker before 1.5 allows\", item.description[:24])\n209         self.as\n",
                                    "line": 209
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d6133852fcc9ca7b98a4c998b509b026",
                            "ruleId": "horusec Medium",
                            "locationId": "566df3a5983c6c1822d4a85fccf57cd7",
                            "line": 91,
                            "code": "Python\n90         self.assertEqual(\"All ports exposed for egressing data\", finding.impact)\n91         self.\n",
                            "status": "To Verify",
                            "description": "<p>Probable insecure usage of temp file/directory.<br /><strong>Code:</strong><br /><code>Python90         self.assertEqual(\"All ports exposed for egressing data\", finding.impact)91         self.</code></p>",
                            "stacks": [
                                {
                                    "locationId": "566df3a5983c6c1822d4a85fccf57cd7",
                                    "sequence": 1,
                                    "code": "Python\n90         self.assertEqual(\"All ports exposed for egressing data\", finding.impact)\n91         self.\n",
                                    "line": 91
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e35a7848079da73e3f9a4260ea7bd66f",
                            "ruleId": "horusec Medium",
                            "locationId": "e4ce50f11debc667d871b3ef3e3885bd",
                            "line": 49,
                            "code": "Python\n48                         })\n49         debugpy.listen((\"0.0.0.0\", debugpy_port))\n50         if os.\n",
                            "status": "To Verify",
                            "description": "<p>Possible binding to all interfaces.<br /><strong>Code:</strong><br /><code>Python48                         })49         debugpy.listen((\"0.0.0.0\", debugpy_port))50         if os.</code></p>",
                            "stacks": [
                                {
                                    "locationId": "e4ce50f11debc667d871b3ef3e3885bd",
                                    "sequence": 1,
                                    "code": "Python\n48                         })\n49         debugpy.listen((\"0.0.0.0\", debugpy_port))\n50         if os.\n",
                                    "line": 49
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "4e09efd138d64f91d897db5a85bcbdd2",
                            "ruleId": "horusec Low",
                            "locationId": "8de0863559b1180de668872817455dae",
                            "line": 1,
                            "code": "Generic\nRUN using 'wget' and 'curl'\n",
                            "status": "To Verify",
                            "description": "<p>Avoid using both 'wget' and 'curl' since these tools have the same effect. - Shouldn't use both curl and wget - Pick one util, either 'wget' or 'curl' - [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run https://avd.aquasec.com/appshield/ds014]<br /><strong>Code:</strong><br /><code>GenericRUN using 'wget' and 'curl'</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8de0863559b1180de668872817455dae",
                                    "sequence": 1,
                                    "code": "Generic\nRUN using 'wget' and 'curl'\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "ff149c1699deaeb20d734ccf2b32e87f",
                            "ruleId": "horusec Low",
                            "locationId": "5d77dc6d03297ea9d9b9796f22619c83",
                            "line": 27,
                            "code": "Python\n26         Benchmark_Product.objects.bulk_create(requirements)\n27     except:\n28         pass\n29 \n\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br />```Python<br />26         Benchmark_Product.objects.bulk_create(requirements)<br />27     except:<br />28         pass<br />29 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "5d77dc6d03297ea9d9b9796f22619c83",
                                    "sequence": 1,
                                    "code": "Python\n26         Benchmark_Product.objects.bulk_create(requirements)\n27     except:\n28         pass\n29 \n\n",
                                    "line": 27
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "56422fb6e8eff328f064350e0621b9a2",
                            "ruleId": "horusec Low",
                            "locationId": "8b3bb696887e718d72bd5678152f7efc",
                            "line": 602,
                            "code": "Python\n601         cred = Cred_Mapping.objects.get(pk=ttid)\n602     except:\n603         pass\n604     if req\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python601         cred = Cred_Mapping.objects.get(pk=ttid)602     except:603         pass604     if req</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8b3bb696887e718d72bd5678152f7efc",
                                    "sequence": 1,
                                    "code": "Python\n601         cred = Cred_Mapping.objects.get(pk=ttid)\n602     except:\n603         pass\n604     if req\n",
                                    "line": 602
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f08038325f8dbbb1eb098757bbf426bd",
                            "ruleId": "horusec Low",
                            "locationId": "cc35010d828a5899b5a109b47e761311",
                            "line": 16,
                            "code": "Python\n15                 ss.save()\n16         except Exception as e:\n17             # probably a test run \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python15                 ss.save()16         except Exception as e:17             # probably a test run</code></p>",
                            "stacks": [
                                {
                                    "locationId": "cc35010d828a5899b5a109b47e761311",
                                    "sequence": 1,
                                    "code": "Python\n15                 ss.save()\n16         except Exception as e:\n17             # probably a test run \n",
                                    "line": 16
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d441699a095b8321099590ee292a1f6c",
                            "ruleId": "horusec Low",
                            "locationId": "0a7971b77af1e3c138881c03984d2a6c",
                            "line": 21,
                            "code": "Python\n20                 ss.save()\n21         except Exception as e:\n22             # probably a test run \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python20                 ss.save()21         except Exception as e:22             # probably a test run</code></p>",
                            "stacks": [
                                {
                                    "locationId": "0a7971b77af1e3c138881c03984d2a6c",
                                    "sequence": 1,
                                    "code": "Python\n20                 ss.save()\n21         except Exception as e:\n22             # probably a test run \n",
                                    "line": 21
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "848a603455737de34ab4115037deeeb2",
                            "ruleId": "horusec Low",
                            "locationId": "6ad121fe2fcdb194895b2ab45ec27c3a",
                            "line": 152,
                            "code": "Python\n151         finding_group.save()\n152     except:\n153         pass\n154 \n\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br />```Python<br />151         finding_group.save()<br />152     except:<br />153         pass<br />154 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "6ad121fe2fcdb194895b2ab45ec27c3a",
                                    "sequence": 1,
                                    "code": "Python\n151         finding_group.save()\n152     except:\n153         pass\n154 \n\n",
                                    "line": 152
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3d7f1616de9c7537144970c572e00fb1",
                            "ruleId": "horusec Low",
                            "locationId": "0ad5be511a724c96025430388fc9427f",
                            "line": 4,
                            "code": "Python\n3 from datetime import datetime, date\n4 import pickle\n5 from crispy_forms.bootstrap import InlineRad\n",
                            "status": "To Verify",
                            "description": "<p>Consider possible security implications associated with pickle module.<br /><strong>Code:</strong><br /><code>Python3 from datetime import datetime, date4 import pickle5 from crispy_forms.bootstrap import InlineRad</code></p>",
                            "stacks": [
                                {
                                    "locationId": "0ad5be511a724c96025430388fc9427f",
                                    "sequence": 1,
                                    "code": "Python\n3 from datetime import datetime, date\n4 import pickle\n5 from crispy_forms.bootstrap import InlineRad\n",
                                    "line": 4
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "80d22d5ebb307f47ad9f1fef48030ad7",
                            "ruleId": "horusec Low",
                            "locationId": "7fc373ba28390480894efa1603c33b93",
                            "line": 326,
                            "code": "Python\n325             sheet_names.append(date)\n326         except:\n327             pass\n328     try:\n\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br />```Python<br />325             sheet_names.append(date)<br />326         except:<br />327             pass<br />328     try:</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "7fc373ba28390480894efa1603c33b93",
                                    "sequence": 1,
                                    "code": "Python\n325             sheet_names.append(date)\n326         except:\n327             pass\n328     try:\n\n",
                                    "line": 326
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "a68b3803f07580ddda4296a7b40195dc",
                            "ruleId": "horusec Low",
                            "locationId": "7fc373ba28390480894efa1603c33b93",
                            "line": 422,
                            "code": "Python\n421                                                     note_type = Note_Type.objects.get(name=note_\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python421                                                     note_type = Note_Type.objects.get(name=note_</code></p>",
                            "stacks": [
                                {
                                    "locationId": "7fc373ba28390480894efa1603c33b93",
                                    "sequence": 1,
                                    "code": "Python\n421                                                     note_type = Note_Type.objects.get(name=note_\n",
                                    "line": 422
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "013270ed6f8ad9c42fc25c4119b26288",
                            "ruleId": "horusec Low",
                            "locationId": "a91f1e2c01b2aa10b47fda29a8496eaa",
                            "line": 33,
                            "code": "Python\n32     def __call__(self, request):\n33         assert hasattr(request, 'user'), \"The Login Required \n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python32     def __call__(self, request):33         assert hasattr(request, 'user'), \"The Login Required</code></p>",
                            "stacks": [
                                {
                                    "locationId": "a91f1e2c01b2aa10b47fda29a8496eaa",
                                    "sequence": 1,
                                    "code": "Python\n32     def __call__(self, request):\n33         assert hasattr(request, 'user'), \"The Login Required \n",
                                    "line": 33
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b75d44326ea3963f350f4725951596a4",
                            "ruleId": "horusec Low",
                            "locationId": "83512e3be7f0e66479b749a348eaac71",
                            "line": 2647,
                            "code": "Python\n2646     def get_status(pass_fail):\n2647         if pass_fail == 'Pass':\n2648             return 'su\n",
                            "status": "To Verify",
                            "description": "<p>Possible hardcoded password: 'Pass'<br /><strong>Code:</strong><br /><code>Python2646     def get_status(pass_fail):2647         if pass_fail == 'Pass':2648             return 'su</code></p>",
                            "stacks": [
                                {
                                    "locationId": "83512e3be7f0e66479b749a348eaac71",
                                    "sequence": 1,
                                    "code": "Python\n2646     def get_status(pass_fail):\n2647         if pass_fail == 'Pass':\n2648             return 'su\n",
                                    "line": 2647
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "933319fb01d7420587df0c3cdc72acd4",
                            "ruleId": "horusec Low",
                            "locationId": "83512e3be7f0e66479b749a348eaac71",
                            "line": 2649,
                            "code": "Python\n2648             return 'success'\n2649         elif pass_fail == 'Fail':\n2650             return 'da\n",
                            "status": "To Verify",
                            "description": "<p>Possible hardcoded password: 'Fail'<br /><strong>Code:</strong><br /><code>Python2648             return 'success'2649         elif pass_fail == 'Fail':2650             return 'da</code></p>",
                            "stacks": [
                                {
                                    "locationId": "83512e3be7f0e66479b749a348eaac71",
                                    "sequence": 1,
                                    "code": "Python\n2648             return 'success'\n2649         elif pass_fail == 'Fail':\n2650             return 'da\n",
                                    "line": 2649
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "00635aae1a3aefd708bc963a83d0acb9",
                            "ruleId": "horusec Low",
                            "locationId": "12de1899b3c199feb9bcf92ba131875a",
                            "line": 36,
                            "code": "Python\n35     REDIRECT_STATE = False\n36     ACCESS_TOKEN_METHOD = 'POST'\n37     SCOPE_SEPARATOR = ' '\n\n",
                            "status": "To Verify",
                            "description": "<p>Possible hardcoded password: 'POST'<br /><strong>Code:</strong><br />```Python<br />35     REDIRECT_STATE = False<br />36     ACCESS_TOKEN_METHOD = 'POST'<br />37     SCOPE_SEPARATOR = ' '</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "12de1899b3c199feb9bcf92ba131875a",
                                    "sequence": 1,
                                    "code": "Python\n35     REDIRECT_STATE = False\n36     ACCESS_TOKEN_METHOD = 'POST'\n37     SCOPE_SEPARATOR = ' '\n\n",
                                    "line": 36
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "d87af00afded98339b292ed65bb4db62",
                            "ruleId": "horusec Low",
                            "locationId": "12de1899b3c199feb9bcf92ba131875a",
                            "line": 69,
                            "code": "Python\n68     REDIRECT_STATE = False\n69     ACCESS_TOKEN_METHOD = 'POST'\n70     RESPONSE_TYPE = 'code'\n\n",
                            "status": "To Verify",
                            "description": "<p>Possible hardcoded password: 'POST'<br /><strong>Code:</strong><br />```Python<br />68     REDIRECT_STATE = False<br />69     ACCESS_TOKEN_METHOD = 'POST'<br />70     RESPONSE_TYPE = 'code'</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "12de1899b3c199feb9bcf92ba131875a",
                                    "sequence": 1,
                                    "code": "Python\n68     REDIRECT_STATE = False\n69     ACCESS_TOKEN_METHOD = 'POST'\n70     RESPONSE_TYPE = 'code'\n\n",
                                    "line": 69
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e27ea2795e61edb68b8f89501e3ef079",
                            "ruleId": "horusec Low",
                            "locationId": "0d3456d4b84bd72b5dcaa4dd8f934562",
                            "line": 840,
                            "code": "Python\n839                     gform.save()\n840                 except:\n841                     pass\n842   \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python839                     gform.save()840                 except:841                     pass842</code></p>",
                            "stacks": [
                                {
                                    "locationId": "0d3456d4b84bd72b5dcaa4dd8f934562",
                                    "sequence": 1,
                                    "code": "Python\n839                     gform.save()\n840                 except:\n841                     pass\n842   \n",
                                    "line": 840
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "11b48add7e43854b8173a1fdce06f0f6",
                            "ruleId": "horusec Low",
                            "locationId": "f6922ec766f82b4432b29c6c70663312",
                            "line": 1,
                            "code": "Python\n1 import pickle\n2 from datetime import date\n3 \n\n",
                            "status": "To Verify",
                            "description": "<p>Consider possible security implications associated with pickle module.<br /><strong>Code:</strong><br />```Python<br />1 import pickle<br />2 from datetime import date<br />3 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "f6922ec766f82b4432b29c6c70663312",
                                    "sequence": 1,
                                    "code": "Python\n1 import pickle\n2 from datetime import date\n3 \n\n",
                                    "line": 1
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "047325ff98aff62696988e3ff5e59054",
                            "ruleId": "horusec Low",
                            "locationId": "ec562fcd5b5bf9029219b0f25fbf8df3",
                            "line": 4,
                            "code": "Python\n3 \n4 from lxml import etree\n5 \n6 from data.models import Endpoint, Finding\n\n",
                            "status": "To Verify",
                            "description": "<p>Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.<br /><strong>Code:</strong><br />```Python<br />3 <br />4 from lxml import etree<br />5 <br />6 from data.models import Endpoint, Finding</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "ec562fcd5b5bf9029219b0f25fbf8df3",
                                    "sequence": 1,
                                    "code": "Python\n3 \n4 from lxml import etree\n5 \n6 from data.models import Endpoint, Finding\n\n",
                                    "line": 4
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5c1e7534fcdd83224a291dd602ebe61e",
                            "ruleId": "horusec Low",
                            "locationId": "8c4554ac55e17b0fe32d953a35d6b5af",
                            "line": 34,
                            "code": "Python\n33                 description += \"\\n\" + location[\"crash_state\"]\n34             except:\n35          \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python33                 description += \"\\n\" + location[\"crash_state\"]34             except:35</code></p>",
                            "stacks": [
                                {
                                    "locationId": "8c4554ac55e17b0fe32d953a35d6b5af",
                                    "sequence": 1,
                                    "code": "Python\n33                 description += \"\\n\" + location[\"crash_state\"]\n34             except:\n35          \n",
                                    "line": 34
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "2e45fff718dc03f6411dbe7d7b2546ad",
                            "ruleId": "horusec Low",
                            "locationId": "70d2be227da8ced8f6aabda247890d38",
                            "line": 124,
                            "code": "Python\n123             description += \"CVSS: {}\\n\".format(cvss)\n124         except:\n125             pass\n12\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python123             description += \"CVSS: {}\\n\".format(cvss)124         except:125             pass12</code></p>",
                            "stacks": [
                                {
                                    "locationId": "70d2be227da8ced8f6aabda247890d38",
                                    "sequence": 1,
                                    "code": "Python\n123             description += \"CVSS: {}\\n\".format(cvss)\n124         except:\n125             pass\n12\n",
                                    "line": 124
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7894afbedf1b365e968ddd9e767c2d6c",
                            "ruleId": "horusec Low",
                            "locationId": "70d2be227da8ced8f6aabda247890d38",
                            "line": 135,
                            "code": "Python\n134             description += \"\\n##Weakness: {}\\n{}\".format(weakness_title, weakness_desc)\n135     \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python134             description += \"\\n##Weakness: {}\\n{}\".format(weakness_title, weakness_desc)135</code></p>",
                            "stacks": [
                                {
                                    "locationId": "70d2be227da8ced8f6aabda247890d38",
                                    "sequence": 1,
                                    "code": "Python\n134             description += \"\\n##Weakness: {}\\n{}\".format(weakness_title, weakness_desc)\n135     \n",
                                    "line": 135
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "a606e3c0847b4040a5a5f77938ce4da7",
                            "ruleId": "horusec Low",
                            "locationId": "aff67882343ec104a94fbba32b9f3924",
                            "line": 79,
                            "code": "Python\n78                 finding.cwe = int(row['CWE'])\n79             except:\n80                 pass\n81 \n\n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br />```Python<br />78                 finding.cwe = int(row['CWE'])<br />79             except:<br />80                 pass<br />81 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "aff67882343ec104a94fbba32b9f3924",
                                    "sequence": 1,
                                    "code": "Python\n78                 finding.cwe = int(row['CWE'])\n79             except:\n80                 pass\n81 \n\n",
                                    "line": 79
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "45fb4ddb4a8b587cafe9069e330bd2c8",
                            "ruleId": "horusec Low",
                            "locationId": "448e71f236d95c86843491990f1b0ae3",
                            "line": 7,
                            "code": "Python\n6 import re\n7 import xml.etree.ElementTree\n8 from datetime import datetime\n\n",
                            "status": "To Verify",
                            "description": "<p>Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.<br /><strong>Code:</strong><br />```Python<br />6 import re<br />7 import xml.etree.ElementTree<br />8 from datetime import datetime</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "448e71f236d95c86843491990f1b0ae3",
                                    "sequence": 1,
                                    "code": "Python\n6 import re\n7 import xml.etree.ElementTree\n8 from datetime import datetime\n\n",
                                    "line": 7
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7dca87e71eda6b155754ad0806b802f7",
                            "ruleId": "horusec Low",
                            "locationId": "7e25837084d8f9ed1546c889b2fcfe68",
                            "line": 5,
                            "code": "Python\n4 from django.utils.html import strip_tags\n5 from lxml import etree\n6 \n7 from data.models import Fin\n",
                            "status": "To Verify",
                            "description": "<p>Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.<br /><strong>Code:</strong><br /><code>Python4 from django.utils.html import strip_tags5 from lxml import etree6 7 from data.models import Fin</code></p>",
                            "stacks": [
                                {
                                    "locationId": "7e25837084d8f9ed1546c889b2fcfe68",
                                    "sequence": 1,
                                    "code": "Python\n4 from django.utils.html import strip_tags\n5 from lxml import etree\n6 \n7 from data.models import Fin\n",
                                    "line": 5
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "418662c3e238882047c1ac5a9c81a5c1",
                            "ruleId": "horusec Low",
                            "locationId": "75214d5e4cc7f7e9223dbb11951e3055",
                            "line": 5,
                            "code": "Python\n4 import html2text\n5 from lxml import etree\n6 import textwrap\n\n",
                            "status": "To Verify",
                            "description": "<p>Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.<br /><strong>Code:</strong><br />```Python<br />4 import html2text<br />5 from lxml import etree<br />6 import textwrap</p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "75214d5e4cc7f7e9223dbb11951e3055",
                                    "sequence": 1,
                                    "code": "Python\n4 import html2text\n5 from lxml import etree\n6 import textwrap\n\n",
                                    "line": 5
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "9543452174c5dba8bfcb49bf2c84f916",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 93,
                            "code": "Python\n92 \n93     assert response.status_code == expected_code, \\\n94         f\"Response invalid, returned w\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python92 93     assert response.status_code == expected_code, \\94         f\"Response invalid, returned w</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n92 \n93     assert response.status_code == expected_code, \\\n94         f\"Response invalid, returned w\n",
                                    "line": 93
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e1d29e25e5b781ac2d28e7a3b60fa806",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 253,
                            "code": "Python\n252         _check(schema, obj)\n253         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python252         _check(schema, obj)253         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n252         _check(schema, obj)\n253         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro\n",
                                    "line": 253
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "3df561cbc9d3ffcccab2e1fd753e4e78",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 285,
                            "code": "Python\n284             methods = paths.get(path, None)\n285             assert methods is not None, f\"{path}\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python284             methods = paths.get(path, None)285             assert methods is not None, f\"{path}</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n284             methods = paths.get(path, None)\n285             assert methods is not None, f\"{path}\n",
                                    "line": 285
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c512042ad6042504ea7da87cba643d2a",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 288,
                            "code": "Python\n287             endpoint = methods.get(method, None)\n288             assert endpoint is not None, f\"\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python287             endpoint = methods.get(method, None)288             assert endpoint is not None, f\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n287             endpoint = methods.get(method, None)\n288             assert endpoint is not None, f\"\n",
                                    "line": 288
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "27f7e8d4769a44ae28090c000338ad7c",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 826,
                            "code": "Python\n825         result_json = result.json()\n826         assert result_json[\"duplicate\"]\n827         asse\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python825         result_json = result.json()826         assert result_json[\"duplicate\"]827         asse</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n825         result_json = result.json()\n826         assert result_json[\"duplicate\"]\n827         asse\n",
                                    "line": 826
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "fac1e41c7f8f6a752cd0514d4dd5c3b5",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 827,
                            "code": "Python\n826         assert result_json[\"duplicate\"]\n827         assert result_json[\"duplicate_finding\"] == 3\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python826         assert result_json[\"duplicate\"]827         assert result_json[\"duplicate_finding\"] == 3</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n826         assert result_json[\"duplicate\"]\n827         assert result_json[\"duplicate_finding\"] == 3\n",
                                    "line": 827
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "9fd60cca6eaac801d893d5551752b13b",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 831,
                            "code": "Python\n830         result = self.client.get(self.url + \"3/duplicate/\")\n831         assert result.status_cod\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python830         result = self.client.get(self.url + \"3/duplicate/\")831         assert result.status_cod</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n830         result = self.client.get(self.url + \"3/duplicate/\")\n831         assert result.status_cod\n",
                                    "line": 831
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "cecc87fa984e237539951bdde7cadd89",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 834,
                            "code": "Python\n833         # Should return all duplicates for id=3\n834         assert set(x[\"id\"] for x in result_j\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python833         # Should return all duplicates for id=3834         assert set(x[\"id\"] for x in result_j</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n833         # Should return all duplicates for id=3\n834         assert set(x[\"id\"] for x in result_j\n",
                                    "line": 834
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "e59666c1f1159846a6253a869bfeb93c",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 842,
                            "code": "Python\n841         result_json = new_result.json()\n842         assert not result_json[\"duplicate\"]\n843     \n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python841         result_json = new_result.json()842         assert not result_json[\"duplicate\"]843</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n841         result_json = new_result.json()\n842         assert not result_json[\"duplicate\"]\n843     \n",
                                    "line": 842
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1d482b3bbf4cbb59802278655a9758c7",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 843,
                            "code": "Python\n842         assert not result_json[\"duplicate\"]\n843         assert result_json[\"duplicate_finding\"] \n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python842         assert not result_json[\"duplicate\"]843         assert result_json[\"duplicate_finding\"]</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n842         assert not result_json[\"duplicate\"]\n843         assert result_json[\"duplicate_finding\"] \n",
                                    "line": 843
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "fc92323796dbf9870e1c7ce5c71a7db6",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 882,
                            "code": "Python\n881 \n882         assert False, \"Metadata was not created correctly\"\n883 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />881 <br />882         assert False, \"Metadata was not created correctly\"<br />883 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n881 \n882         assert False, \"Metadata was not created correctly\"\n883 \n\n",
                                    "line": 882
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "41f8c452ffe45ce39ca386a2ff46b1d0",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 886,
                            "code": "Python\n885         result = self.client.post(self.base_url, data={\"name\": \"test_meta\", \"value\": \"40\"})\n886 \n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python885         result = self.client.post(self.base_url, data={\"name\": \"test_meta\", \"value\": \"40\"})886</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n885         result = self.client.post(self.base_url, data={\"name\": \"test_meta\", \"value\": \"40\"})\n886 \n",
                                    "line": 886
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "28679cd63554dcf9e53b58841275ed2a",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 894,
                            "code": "Python\n893 \n894         assert False, \"Metadata was not created correctly\"\n895 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />893 <br />894         assert False, \"Metadata was not created correctly\"<br />895 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n893 \n894         assert False, \"Metadata was not created correctly\"\n895 \n\n",
                                    "line": 894
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "f6b711d2f6ffbfb0c7d9474d55b4893e",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 899,
                            "code": "Python\n898         result = self.client.get(self.base_url).data[0]\n899         assert result[\"name\"] == \"te\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python898         result = self.client.get(self.base_url).data[0]899         assert result[\"name\"] == \"te</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n898         result = self.client.get(self.base_url).data[0]\n899         assert result[\"name\"] == \"te\n",
                                    "line": 899
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "6c9b9c024226b738f9dc587c308f11a3",
                            "ruleId": "horusec Low",
                            "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                            "line": 904,
                            "code": "Python\n903         result = self.client.get(self.base_url).data\n904         assert len(result) == 0, \"Metad\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python903         result = self.client.get(self.base_url).data904         assert len(result) == 0, \"Metad</code></p>",
                            "stacks": [
                                {
                                    "locationId": "163b6656ba80a06e26df2b62ef8f5288",
                                    "sequence": 1,
                                    "code": "Python\n903         result = self.client.get(self.base_url).data\n904         assert len(result) == 0, \"Metad\n",
                                    "line": 904
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "1e9a8a776726ea4ca944106642628dcb",
                            "ruleId": "horusec Low",
                            "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                            "line": 67,
                            "code": "Python\n66 \n67     assert response.status_code == expected_code, \\\n68         f\"Response invalid, returned w\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python66 67     assert response.status_code == expected_code, \\68         f\"Response invalid, returned w</code></p>",
                            "stacks": [
                                {
                                    "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                                    "sequence": 1,
                                    "code": "Python\n66 \n67     assert response.status_code == expected_code, \\\n68         f\"Response invalid, returned w\n",
                                    "line": 67
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "5f53ea0a9c05c3f292d3b162111a7c23",
                            "ruleId": "horusec Low",
                            "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                            "line": 185,
                            "code": "Python\n184         _check(schema, obj)\n185         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python184         _check(schema, obj)185         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro</code></p>",
                            "stacks": [
                                {
                                    "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                                    "sequence": 1,
                                    "code": "Python\n184         _check(schema, obj)\n185         assert not self._has_failed, \"\\n\" + '\\n'.join(self._erro\n",
                                    "line": 185
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7c8f39460270369e94ae1d116d47c6e0",
                            "ruleId": "horusec Low",
                            "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                            "line": 229,
                            "code": "Python\n228             methods = paths.get(path, None)\n229             assert methods is not None, f\"{path}\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python228             methods = paths.get(path, None)229             assert methods is not None, f\"{path}</code></p>",
                            "stacks": [
                                {
                                    "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                                    "sequence": 1,
                                    "code": "Python\n228             methods = paths.get(path, None)\n229             assert methods is not None, f\"{path}\n",
                                    "line": 229
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "dc8c0356820411549dea178d97ec6fe9",
                            "ruleId": "horusec Low",
                            "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                            "line": 232,
                            "code": "Python\n231             endpoint = methods.get(method, None)\n232             assert endpoint is not None, f\"\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br /><code>Python231             endpoint = methods.get(method, None)232             assert endpoint is not None, f\"</code></p>",
                            "stacks": [
                                {
                                    "locationId": "91350233e8e3e27e2f24b6c798ee6daf",
                                    "sequence": 1,
                                    "code": "Python\n231             endpoint = methods.get(method, None)\n232             assert endpoint is not None, f\"\n",
                                    "line": 232
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "77b89e328777c2d69130156d730bea71",
                            "ruleId": "horusec Low",
                            "locationId": "49899b172db080c455ed94a373abce47",
                            "line": 24,
                            "code": "Python\n23 \n24         finding_details['title'] = 'tags test ' + str(random.randint(1, 9999))\n25         fin\n",
                            "status": "To Verify",
                            "description": "<p>Standard pseudo-random generators are not suitable for security/cryptographic purposes.<br /><strong>Code:</strong><br /><code>Python23 24         finding_details['title'] = 'tags test ' + str(random.randint(1, 9999))25         fin</code></p>",
                            "stacks": [
                                {
                                    "locationId": "49899b172db080c455ed94a373abce47",
                                    "sequence": 1,
                                    "code": "Python\n23 \n24         finding_details['title'] = 'tags test ' + str(random.randint(1, 9999))\n25         fin\n",
                                    "line": 24
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "a3c9cd13d32c0ac9c37f17b87d972f6a",
                            "ruleId": "horusec Low",
                            "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                            "line": 50,
                            "code": "Python\n49             print()\n50         assert len(missing_tests) == 0\n51 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />49             print()<br />50         assert len(missing_tests) == 0<br />51 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                                    "sequence": 1,
                                    "code": "Python\n49             print()\n50         assert len(missing_tests) == 0\n51 \n\n",
                                    "line": 50
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "c5b219fe051b7c37c8525d392d527e8b",
                            "ruleId": "horusec Low",
                            "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                            "line": 79,
                            "code": "Python\n78             print()\n79         assert len(missing_docs) == 0\n80 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />78             print()<br />79         assert len(missing_docs) == 0<br />80 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                                    "sequence": 1,
                                    "code": "Python\n78             print()\n79         assert len(missing_docs) == 0\n80 \n\n",
                                    "line": 79
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "37864dd0bd2f88cc8b6da820bfb86162",
                            "ruleId": "horusec Low",
                            "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                            "line": 117,
                            "code": "Python\n116             print()\n117         assert len(missing_forms) == 0\n118 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />116             print()<br />117         assert len(missing_forms) == 0<br />118 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                                    "sequence": 1,
                                    "code": "Python\n116             print()\n117         assert len(missing_forms) == 0\n118 \n\n",
                                    "line": 117
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "0058d00c88041fea0d00b9ecdd1d23c6",
                            "ruleId": "horusec Low",
                            "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                            "line": 158,
                            "code": "Python\n157             print()\n158         assert len(missing_templates) == 0\n159 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />157             print()<br />158         assert len(missing_templates) == 0<br />159 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                                    "sequence": 1,
                                    "code": "Python\n157             print()\n158         assert len(missing_templates) == 0\n159 \n\n",
                                    "line": 158
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "b9242bc9b0c1837f68e598a0a46e63c9",
                            "ruleId": "horusec Low",
                            "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                            "line": 201,
                            "code": "Python\n200                     scan_map[test] = options_text[list(found_matches.keys())[index]]\n201        \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python200                     scan_map[test] = options_text[list(found_matches.keys())[index]]201</code></p>",
                            "stacks": [
                                {
                                    "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                                    "sequence": 1,
                                    "code": "Python\n200                     scan_map[test] = options_text[list(found_matches.keys())[index]]\n201        \n",
                                    "line": 201
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "293a1e49183faee20e8218566348f5df",
                            "ruleId": "horusec Low",
                            "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                            "line": 244,
                            "code": "Python\n243             print()\n244         assert len(failed_tests) == 0\n245 \n\n",
                            "status": "To Verify",
                            "description": "<p>Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.<br /><strong>Code:</strong><br />```Python<br />243             print()<br />244         assert len(failed_tests) == 0<br />245 </p><p>```</p>",
                            "stacks": [
                                {
                                    "locationId": "3bcefa5e951b4dfd67d556956854fdf8",
                                    "sequence": 1,
                                    "code": "Python\n243             print()\n244         assert len(failed_tests) == 0\n245 \n\n",
                                    "line": 244
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "16359b83dd0423b3cf03b3123a9253ed",
                            "ruleId": "horusec Low",
                            "locationId": "c20fd8677fc2705e8f09d28babba56aa",
                            "line": 191,
                            "code": "Python\n190             no_content = self.driver.find_element_by_id(no_content_id)\n191         except:\n192  \n",
                            "status": "To Verify",
                            "description": "<p>Try, Except, Pass detected.<br /><strong>Code:</strong><br /><code>Python190             no_content = self.driver.find_element_by_id(no_content_id)191         except:192</code></p>",
                            "stacks": [
                                {
                                    "locationId": "c20fd8677fc2705e8f09d28babba56aa",
                                    "sequence": 1,
                                    "code": "Python\n190             no_content = self.driver.find_element_by_id(no_content_id)\n191         except:\n192  \n",
                                    "line": 191
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "$schema": "https://docs.appsec-hub.ru/"
}