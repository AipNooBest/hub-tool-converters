{
    "version": "1.0.1",
    "scans": [
        {
            "scanDetails": {
                "id": "fbd75761-aac6-4039-a18f-a36866def1e8",
                "description": "Import semgrep results"
            },
            "source": [
                {
                    "id": "cc995d69-28d3-47a7-b076-cd1baad516ca",
                    "type": "codebase",
                    "name": "hub-tool-converters",
                    "url": "https://github.com/Swordfish-Security/hub-tool-converters.git",
                    "checkoutPath": "/",
                    "branch": "master",
                    "commit": "master",
                    "vcsType": "git",
                    "buildTool": "maven"
                }
            ],
            "tool": {
                "product": "semgrep"
            },
            "results": [
                {
                    "rules": [
                        {
                            "type": "sast",
                            "name": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "id": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "severity": "Medium",
                            "cwe": [
                                {
                                    "id": 696
                                }
                            ],
                            "description": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle\nhttps://capec.mitre.org/data/definitions/463.html"
                        }
                    ],
                    "locations": [
                        {
                            "type": "codebase",
                            "id": "4730e4e3fa3d2973b7d6fd907535b733",
                            "sourceId": "cc995d69-28d3-47a7-b076-cd1baad516ca",
                            "fileName": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "bcc192a00f0a6fd1cfebab12d5f07415",
                            "sourceId": "cc995d69-28d3-47a7-b076-cd1baad516ca",
                            "fileName": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java",
                            "language": "Any"
                        },
                        {
                            "type": "codebase",
                            "id": "19192bf22d09678733a38d92a7801fb3",
                            "sourceId": "cc995d69-28d3-47a7-b076-cd1baad516ca",
                            "fileName": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java",
                            "language": "Any"
                        }
                    ],
                    "findings": [
                        {
                            "type": "sast",
                            "id": "20e265dcfe0ec16f25962c2e27cce481",
                            "ruleId": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "locationId": "4730e4e3fa3d2973b7d6fd907535b733",
                            "line": 64,
                            "code": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");",
                            "status": "To Verify",
                            "description": "<p><strong>Result message:</strong> Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor<br />could discern the difference between plaintext with valid or invalid padding. Further,<br />CBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.<br />Use 'AES/GCM/NoPadding' instead.</p><p><strong>Snippet:</strong><br /><code>javax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");</code></p>",
                            "stacks": [
                                {
                                    "locationId": "4730e4e3fa3d2973b7d6fd907535b733",
                                    "sequence": 1,
                                    "code": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");",
                                    "line": 64
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "7aedb11fd92ace65a9b1fdcece1c07c1",
                            "ruleId": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "locationId": "bcc192a00f0a6fd1cfebab12d5f07415",
                            "line": 64,
                            "code": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");",
                            "status": "To Verify",
                            "description": "<p><strong>Result message:</strong> Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor<br />could discern the difference between plaintext with valid or invalid padding. Further,<br />CBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.<br />Use 'AES/GCM/NoPadding' instead.</p><p><strong>Snippet:</strong><br /><code>javax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");</code></p>",
                            "stacks": [
                                {
                                    "locationId": "bcc192a00f0a6fd1cfebab12d5f07415",
                                    "sequence": 1,
                                    "code": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");",
                                    "line": 64
                                }
                            ]
                        },
                        {
                            "type": "sast",
                            "id": "dd46bcce7216b49a983328b7d0a1a66a",
                            "ruleId": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "locationId": "19192bf22d09678733a38d92a7801fb3",
                            "line": 66,
                            "code": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");",
                            "status": "To Verify",
                            "description": "<p><strong>Result message:</strong> Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor<br />could discern the difference between plaintext with valid or invalid padding. Further,<br />CBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.<br />Use 'AES/GCM/NoPadding' instead.</p><p><strong>Snippet:</strong><br /><code>javax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");</code></p>",
                            "stacks": [
                                {
                                    "locationId": "19192bf22d09678733a38d92a7801fb3",
                                    "sequence": 1,
                                    "code": "\t\t\tjavax.crypto.Cipher c = javax.crypto.Cipher.getInstance(\"DES/CBC/PKCS5Padding\");",
                                    "line": 66
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "$schema": "https://docs.appsec-hub.ru/"
}