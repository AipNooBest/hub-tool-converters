{
    "version": "1.0.1",
    "scans": [
        {
            "scanDetails": {
                "id": "4455bd9c-5b88-4bfc-9b32-498318f96d9a",
                "description": "Import kaspersky-cs results"
            },
            "source": [
                {
                    "id": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                    "type": "artifact",
                    "name": "hub-tool-converters",
                    "url": "https://github.com/Swordfish-Security/hub-tool-converters.git"
                }
            ],
            "tool": {
                "product": "kaspersky-cs"
            },
            "results": [
                {
                    "rules": [
                        {
                            "type": "sca_s",
                            "name": "CVE-2016-2781",
                            "id": "CVE-2016-2781",
                            "severity": "Low",
                            "cwe": [
                                {
                                    "id": 20
                                }
                            ],
                            "description": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
                            "cveId": "CVE-2016-2781",
                            "cvssv3": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N",
                            "cvssv3_score": 6.5,
                            "references": [
                                "https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E",
                                "https://www.cve.org/CVERecord?id=CVE-2016-2781",
                                "http://seclists.org/oss-sec/2016/q1/452",
                                "http://www.openwall.com/lists/oss-security/2016/02/28/2",
                                "http://www.openwall.com/lists/oss-security/2016/02/28/3",
                                "https://access.redhat.com/security/cve/CVE-2016-2781",
                                "https://lore.kernel.org/patchwork/patch/793178/",
                                "https://nvd.nist.gov/vuln/detail/CVE-2016-2781"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2022-3219",
                            "id": "CVE-2022-3219",
                            "severity": "Low",
                            "cwe": [
                                {
                                    "id": 787
                                }
                            ],
                            "description": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
                            "cveId": "CVE-2022-3219",
                            "cvssv3": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
                            "cvssv3_score": 3.3,
                            "references": [
                                "https://bugzilla.redhat.com/show_bug.cgi?id=2127010",
                                "https://dev.gnupg.org/D556",
                                "https://dev.gnupg.org/T5993",
                                "https://marc.info/?l=oss-security&m=165696590211434&w=4",
                                "https://nvd.nist.gov/vuln/detail/CVE-2022-3219",
                                "https://security.netapp.com/advisory/ntap-20230324-0001/",
                                "https://www.cve.org/CVERecord?id=CVE-2022-3219",
                                "https://access.redhat.com/security/cve/CVE-2022-3219"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2016-20013",
                            "id": "CVE-2016-20013",
                            "severity": "Low",
                            "cwe": [
                                {
                                    "id": 770
                                }
                            ],
                            "description": "sha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm's runtime is proportional to the square of the length of the password.",
                            "cveId": "CVE-2016-20013",
                            "cvssv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                            "cvssv3_score": 7.5,
                            "references": [
                                "https://pthree.org/2018/05/23/do-not-use-sha256crypt-sha512crypt-theyre-dangerous/",
                                "https://twitter.com/solardiz/status/795601240151457793",
                                "https://akkadia.org/drepper/SHA-crypt.txt",
                                "https://www.cve.org/CVERecord?id=CVE-2016-20013"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2024-2236",
                            "id": "CVE-2024-2236",
                            "severity": "Medium",
                            "cwe": [
                                {
                                    "id": 208
                                }
                            ],
                            "description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
                            "cveId": "CVE-2024-2236",
                            "cvssv3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
                            "cvssv3_score": 5.9,
                            "references": [
                                "https://access.redhat.com/security/cve/CVE-2024-2236",
                                "https://bugzilla.redhat.com/show_bug.cgi?id=2268268",
                                "https://nvd.nist.gov/vuln/detail/CVE-2024-2236",
                                "https://www.cve.org/CVERecord?id=CVE-2024-2236",
                                "https://bugzilla.redhat.com/show_bug.cgi?id=2245218",
                                "https://github.com/tomato42/marvin-toolkit/tree/master/example/libgcrypt",
                                "https://lists.gnupg.org/pipermail/gcrypt-devel/2024-March/005607.html"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2020-22916",
                            "id": "CVE-2020-22916",
                            "severity": "Medium",
                            "cwe": null,
                            "description": "An issue discovered in XZ 5.2.5 allows attackers to cause a denial of service via decompression of a crafted file. NOTE: the vendor disputes the claims of \"endless output\" and \"denial of service\" because decompression of the 17,486 bytes always results in 114,881,179 bytes, which is often a reasonable size increase.",
                            "cveId": "CVE-2020-22916",
                            "cvssv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                            "cvssv3_score": 5.5,
                            "references": [
                                "http://web.archive.org/web/20230918084612/https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability",
                                "https://bugzilla.redhat.com/show_bug.cgi?id=2234987",
                                "https://bugzilla.suse.com/show_bug.cgi?id=1214590",
                                "https://github.com/tukaani-project/xz/issues/61",
                                "https://security-tracker.debian.org/tracker/CVE-2020-22916",
                                "https://access.redhat.com/security/cve/CVE-2020-22916",
                                "https://nvd.nist.gov/vuln/detail/CVE-2020-22916",
                                "https://tukaani.org/xz/",
                                "https://www.cve.org/CVERecord?id=CVE-2020-22916",
                                "https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2024-2511",
                            "id": "CVE-2024-2511",
                            "severity": "Low",
                            "cwe": null,
                            "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
                            "cveId": "CVE-2024-2511",
                            "cvssv3": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
                            "cvssv3_score": 5.9,
                            "references": [
                                "https://access.redhat.com/security/cve/CVE-2024-2511",
                                "https://nvd.nist.gov/vuln/detail/CVE-2024-2511",
                                "https://www.cve.org/CVERecord?id=CVE-2024-2511",
                                "https://www.openssl.org/news/vulnerabilities.html",
                                "https://github.com/openssl/openssl/commit/7e4d731b1c07201ad9374c1cd9ac5263bdf35bce",
                                "https://github.com/openssl/openssl/commit/b52867a9f618bb955bed2a3ce3db4d4f97ed8e5d",
                                "https://github.com/openssl/openssl/commit/e9d7083e241670332e0443da0f0d4ffb52829f08",
                                "https://github.openssl.org/openssl/extended-releases/commit/5f8d25770ae6437db119dfc951e207271a326640",
                                "https://www.openssl.org/news/secadv/20240408.txt",
                                "https://security.netapp.com/advisory/ntap-20240503-0013/",
                                "http://www.openwall.com/lists/oss-security/2024/04/08/5",
                                "https://redos.red-soft.ru/support/secure/uyazvimosti/uyazvimost-openssl3-cve-2024-2511/",
                                "https://ubuntu.com/security/notices/USN-6937-1"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2024-4603",
                            "id": "CVE-2024-4603",
                            "severity": "Low",
                            "cwe": [
                                {
                                    "id": 834
                                }
                            ],
                            "description": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                            "cveId": "CVE-2024-4603",
                            "cvssv3": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                            "cvssv3_score": 5.3,
                            "references": [
                                "https://redos.red-soft.ru/support/secure/uyazvimosti/uyazvimost-openssl3-cve-2024-4603/",
                                "http://www.openwall.com/lists/oss-security/2024/05/16/2",
                                "https://security.netapp.com/advisory/ntap-20240621-0001/",
                                "https://github.com/openssl/openssl/commit/3559e868e58005d15c6013a0c1fd832e51c73397",
                                "https://github.com/openssl/openssl/commit/53ea06486d296b890d565fb971b2764fcd826e7e",
                                "https://github.com/openssl/openssl/commit/9c39b3858091c152f52513c066ff2c5a47969f0d",
                                "https://github.com/openssl/openssl/commit/da343d0605c826ef197aceedc67e8e04f065f740",
                                "https://www.openssl.org/news/secadv/20240516.txt",
                                "https://www.cve.org/CVERecord?id=CVE-2024-4603",
                                "https://access.redhat.com/security/cve/CVE-2024-4603",
                                "https://nvd.nist.gov/vuln/detail/CVE-2024-4603",
                                "https://ubuntu.com/security/notices/USN-6937-1"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2024-4741",
                            "id": "CVE-2024-4741",
                            "severity": "Low",
                            "cwe": null,
                            "description": "A use-after-free vulnerability was found in OpenSSL. Calling the OpenSSL API SSL_free_buffers function may cause memory to be accessed that was previously freed in some situations.",
                            "cveId": "CVE-2024-4741",
                            "cvssv3": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            "cvssv3_score": 8.1,
                            "references": [
                                "https://www.cve.org/CVERecord?id=CVE-2024-4741",
                                "https://www.openssl.org/news/secadv/20240528.txt",
                                "https://access.redhat.com/security/cve/CVE-2024-4741",
                                "https://nvd.nist.gov/vuln/detail/CVE-2024-4741",
                                "https://redos.red-soft.ru/support/secure/uyazvimosti/uyazvimost-openssl3-cve-2024-4741/",
                                "https://ubuntu.com/security/notices/USN-6937-1"
                            ]
                        },
                        {
                            "type": "sca_s",
                            "name": "CVE-2024-5535",
                            "id": "CVE-2024-5535",
                            "severity": "Low",
                            "cwe": [
                                {
                                    "id": 200
                                }
                            ],
                            "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
                            "cveId": "CVE-2024-5535",
                            "cvssv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
                            "cvssv3_score": 5.9,
                            "references": [
                                "http://www.openwall.com/lists/oss-security/2024/06/27/1",
                                "https://github.com/openssl/openssl/commit/4ada436a1946cbb24db5ab4ca082b69c1bc10f37",
                                "https://github.com/openssl/openssl/commit/99fb785a5f85315b95288921a321a935ea29a51e",
                                "https://github.com/openssl/openssl/commit/cf6f91f6121f4db167405db2f0de410a456f260c",
                                "https://github.com/openssl/openssl/commit/e86ac436f0bd54d4517745483e2315650fae7b2c",
                                "https://github.openssl.org/openssl/extended-releases/commit/9947251413065a05189a63c9b7a6c1d4e224c21c",
                                "https://github.openssl.org/openssl/extended-releases/commit/b78ec0824da857223486660177d3b1f255c65d87",
                                "https://openssl.org/news/secadv/20240627.txt",
                                "https://www.cve.org/CVERecord?id=CVE-2024-5535",
                                "https://www.openssl.org/news/secadv/20240627.txt",
                                "http://www.openwall.com/lists/oss-security/2024/06/28/4",
                                "https://access.redhat.com/security/cve/CVE-2024-5535",
                                "https://nvd.nist.gov/vuln/detail/CVE-2024-5535",
                                "https://security.netapp.com/advisory/ntap-20240712-0005/",
                                "https://ubuntu.com/security/notices/USN-6937-1"
                            ]
                        }
                    ],
                    "locations": [
                        {
                            "type": "component",
                            "id": "coreutils@9.4-3ubuntu6",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "coreutils",
                            "componentVersion": "9.4-3ubuntu6"
                        },
                        {
                            "type": "component",
                            "id": "gpgv@2.4.4-2ubuntu17",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "gpgv",
                            "componentVersion": "2.4.4-2ubuntu17"
                        },
                        {
                            "type": "component",
                            "id": "libc-bin@2.39-0ubuntu8.2",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "libc-bin",
                            "componentVersion": "2.39-0ubuntu8.2"
                        },
                        {
                            "type": "component",
                            "id": "libc6@2.39-0ubuntu8.2",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "libc6",
                            "componentVersion": "2.39-0ubuntu8.2"
                        },
                        {
                            "type": "component",
                            "id": "libgcrypt20@1.10.3-2build1",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "libgcrypt20",
                            "componentVersion": "1.10.3-2build1"
                        },
                        {
                            "type": "component",
                            "id": "liblzma5@5.6.1+really5.4.5-1",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "liblzma5",
                            "componentVersion": "5.6.1+really5.4.5-1"
                        },
                        {
                            "type": "component",
                            "id": "libssl3t64@3.0.13-0ubuntu3.1",
                            "sourceId": "91dfaaeb-64af-4e9b-a8f2-f28fd8a22b2d",
                            "componentName": "libssl3t64",
                            "componentVersion": "3.0.13-0ubuntu3.1"
                        }
                    ],
                    "findings": [
                        {
                            "type": "sca_s",
                            "id": "ab55aa030740d6f24ba5d6723112ee34",
                            "ruleId": "CVE-2016-2781",
                            "locationId": "coreutils@9.4-3ubuntu6",
                            "status": "To Verify",
                            "description": "<p>chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "2ca71e509243b80f35db189050d51fc0",
                            "ruleId": "CVE-2022-3219",
                            "locationId": "gpgv@2.4.4-2ubuntu17",
                            "status": "To Verify",
                            "description": "<p>GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "67a4330e4ea85380b8d7baf5afb229c7",
                            "ruleId": "CVE-2016-20013",
                            "locationId": "libc-bin@2.39-0ubuntu8.2",
                            "status": "To Verify",
                            "description": "<p>sha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm's runtime is proportional to the square of the length of the password.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "2b52917b58849dfea703455f742bfdfd",
                            "ruleId": "CVE-2016-20013",
                            "locationId": "libc6@2.39-0ubuntu8.2",
                            "status": "To Verify",
                            "description": "<p>sha256crypt and sha512crypt through 0.6 allow attackers to cause a denial of service (CPU consumption) because the algorithm's runtime is proportional to the square of the length of the password.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "f8fdccf4aa48089d508a91b70ebed707",
                            "ruleId": "CVE-2024-2236",
                            "locationId": "libgcrypt20@1.10.3-2build1",
                            "status": "To Verify",
                            "description": "<p>A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "03f9efe416a4c2a968f69860a25ac963",
                            "ruleId": "CVE-2020-22916",
                            "locationId": "liblzma5@5.6.1+really5.4.5-1",
                            "status": "To Verify",
                            "description": "<p>An issue discovered in XZ 5.2.5 allows attackers to cause a denial of service via decompression of a crafted file. NOTE: the vendor disputes the claims of \"endless output\" and \"denial of service\" because decompression of the 17,486 bytes always results in 114,881,179 bytes, which is often a reasonable size increase.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "b24514ea6984e9f92c6582734f11a28f",
                            "ruleId": "CVE-2024-2511",
                            "locationId": "libssl3t64@3.0.13-0ubuntu3.1",
                            "status": "To Verify",
                            "description": "<p>Issue summary: Some non-default TLS server configurations can cause unbounded<br />memory growth when processing TLSv1.3 sessions</p><p>Impact summary: An attacker may exploit certain server configurations to trigger<br />unbounded memory growth that would lead to a Denial of Service</p><p>This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is<br />being used (but not if early_data support is also configured and the default<br />anti-replay protection is in use). In this case, under certain conditions, the<br />session cache can get into an incorrect state and it will fail to flush properly<br />as it fills. The session cache will continue to grow in an unbounded manner. A<br />malicious client could deliberately create the scenario for this failure to<br />force a Denial of Service. It may also happen by accident in normal operation.</p><p>This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS<br />clients.</p><p>The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL<br />1.0.2 is also not affected by this issue.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "ac081edd8302ae9c4060985e6801a445",
                            "ruleId": "CVE-2024-4603",
                            "locationId": "libssl3t64@3.0.13-0ubuntu3.1",
                            "status": "To Verify",
                            "description": "<p>Issue summary: Checking excessively long DSA keys or parameters may be very<br />slow.</p><p>Impact summary: Applications that use the functions EVP_PKEY_param_check()<br />or EVP_PKEY_public_check() to check a DSA public key or DSA parameters may<br />experience long delays. Where the key or parameters that are being checked<br />have been obtained from an untrusted source this may lead to a Denial of<br />Service.</p><p>The functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform<br />various checks on DSA parameters. Some of those computations take a long time<br />if the modulus (<code>p</code> parameter) is too large.</p><p>Trying to use a very large modulus is slow and OpenSSL will not allow using<br />public keys with a modulus which is over 10,000 bits in length for signature<br />verification. However the key and parameter check functions do not limit<br />the modulus size when performing the checks.</p><p>An application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()<br />and supplies a key or parameters obtained from an untrusted source could be<br />vulnerable to a Denial of Service attack.</p><p>These functions are not called by OpenSSL itself on untrusted DSA keys so<br />only applications that directly call these functions may be vulnerable.</p><p>Also vulnerable are the OpenSSL pkey and pkeyparam command line applications<br />when using the <code>-check</code> option.</p><p>The OpenSSL SSL/TLS implementation is not affected by this issue.</p><p>The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "456d19d8613aca7b1f24046b7aa6f5f0",
                            "ruleId": "CVE-2024-4741",
                            "locationId": "libssl3t64@3.0.13-0ubuntu3.1",
                            "status": "To Verify",
                            "description": "<p>A use-after-free vulnerability was found in OpenSSL. Calling the OpenSSL API SSL_free_buffers function may cause memory to be accessed that was previously freed in some situations.</p>"
                        },
                        {
                            "type": "sca_s",
                            "id": "ddfb41eac79b5394e72100595b5e8c85",
                            "ruleId": "CVE-2024-5535",
                            "locationId": "libssl3t64@3.0.13-0ubuntu3.1",
                            "status": "To Verify",
                            "description": "<p>Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an<br />empty supported client protocols buffer may cause a crash or memory contents to<br />be sent to the peer.</p><p>Impact summary: A buffer overread can have a range of potential consequences<br />such as unexpected application beahviour or a crash. In particular this issue<br />could result in up to 255 bytes of arbitrary private data from memory being sent<br />to the peer leading to a loss of confidentiality. However, only applications<br />that directly call the SSL_select_next_proto function with a 0 length list of<br />supported client protocols are affected by this issue. This would normally never<br />be a valid scenario and is typically not under attacker control but may occur by<br />accident in the case of a configuration or programming error in the calling<br />application.</p><p>The OpenSSL API function SSL_select_next_proto is typically used by TLS<br />applications that support ALPN (Application Layer Protocol Negotiation) or NPN<br />(Next Protocol Negotiation). NPN is older, was never standardised and<br />is deprecated in favour of ALPN. We believe that ALPN is significantly more<br />widely deployed than NPN. The SSL_select_next_proto function accepts a list of<br />protocols from the server and a list of protocols from the client and returns<br />the first protocol that appears in the server list that also appears in the<br />client list. In the case of no overlap between the two lists it returns the<br />first item in the client list. In either case it will signal whether an overlap<br />between the two lists was found. In the case where SSL_select_next_proto is<br />called with a zero length client list it fails to notice this condition and<br />returns the memory immediately following the client list pointer (and reports<br />that there was no overlap in the lists).</p><p>This function is typically called from a server side application callback for<br />ALPN or a client side application callback for NPN. In the case of ALPN the list<br />of protocols supplied by the client is guaranteed by libssl to never be zero in<br />length. The list of server protocols comes from the application and should never<br />normally be expected to be of zero length. In this case if the<br />SSL_select_next_proto function has been called as expected (with the list<br />supplied by the client passed in the client/client_len parameters), then the<br />application will not be vulnerable to this issue. If the application has<br />accidentally been configured with a zero length server list, and has<br />accidentally passed that zero length server list in the client/client_len<br />parameters, and has additionally failed to correctly handle a \"no overlap\"<br />response (which would normally result in a handshake failure in ALPN) then it<br />will be vulnerable to this problem.</p><p>In the case of NPN, the protocol permits the client to opportunistically select<br />a protocol when there is no overlap. OpenSSL returns the first client protocol<br />in the no overlap case in support of this. The list of client protocols comes<br />from the application and should never normally be expected to be of zero length.<br />However if the SSL_select_next_proto function is accidentally called with a<br />client_len of 0 then an invalid memory pointer will be returned instead. If the<br />application uses this output as the opportunistic protocol then the loss of<br />confidentiality will occur.</p><p>This issue has been assessed as Low severity because applications are most<br />likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not<br />widely used. It also requires an application configuration or programming error.<br />Finally, this issue would not typically be under attacker control making active<br />exploitation unlikely.</p><p>The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.</p><p>Due to the low severity of this issue we are not issuing new releases of<br />OpenSSL at this time. The fix will be included in the next releases when they<br />become available.</p>"
                        }
                    ]
                }
            ]
        }
    ],
    "$schema": "https://docs.appsec-hub.ru/"
}